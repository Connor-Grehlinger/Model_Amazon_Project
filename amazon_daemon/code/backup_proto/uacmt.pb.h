// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: uacmt.proto

#ifndef PROTOBUF_uacmt_2eproto__INCLUDED
#define PROTOBUF_uacmt_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3005001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace protobuf_uacmt_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[11];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
void InitDefaultsLoadedImpl();
void InitDefaultsLoaded();
void InitDefaultsProductImpl();
void InitDefaultsProduct();
void InitDefaultsWarehouseImpl();
void InitDefaultsWarehouse();
void InitDefaultsPurchaseImpl();
void InitDefaultsPurchase();
void InitDefaultsChangeDesImpl();
void InitDefaultsChangeDes();
void InitDefaultsAUCommandsImpl();
void InitDefaultsAUCommands();
void InitDefaultsPackageStatusImpl();
void InitDefaultsPackageStatus();
void InitDefaultsDesChangeResultImpl();
void InitDefaultsDesChangeResult();
void InitDefaultsStartLoadImpl();
void InitDefaultsStartLoad();
void InitDefaultsPackageIDImpl();
void InitDefaultsPackageID();
void InitDefaultsUACommandsImpl();
void InitDefaultsUACommands();
inline void InitDefaults() {
  InitDefaultsLoaded();
  InitDefaultsProduct();
  InitDefaultsWarehouse();
  InitDefaultsPurchase();
  InitDefaultsChangeDes();
  InitDefaultsAUCommands();
  InitDefaultsPackageStatus();
  InitDefaultsDesChangeResult();
  InitDefaultsStartLoad();
  InitDefaultsPackageID();
  InitDefaultsUACommands();
}
}  // namespace protobuf_uacmt_2eproto
class AUCommands;
class AUCommandsDefaultTypeInternal;
extern AUCommandsDefaultTypeInternal _AUCommands_default_instance_;
class ChangeDes;
class ChangeDesDefaultTypeInternal;
extern ChangeDesDefaultTypeInternal _ChangeDes_default_instance_;
class DesChangeResult;
class DesChangeResultDefaultTypeInternal;
extern DesChangeResultDefaultTypeInternal _DesChangeResult_default_instance_;
class Loaded;
class LoadedDefaultTypeInternal;
extern LoadedDefaultTypeInternal _Loaded_default_instance_;
class PackageID;
class PackageIDDefaultTypeInternal;
extern PackageIDDefaultTypeInternal _PackageID_default_instance_;
class PackageStatus;
class PackageStatusDefaultTypeInternal;
extern PackageStatusDefaultTypeInternal _PackageStatus_default_instance_;
class Product;
class ProductDefaultTypeInternal;
extern ProductDefaultTypeInternal _Product_default_instance_;
class Purchase;
class PurchaseDefaultTypeInternal;
extern PurchaseDefaultTypeInternal _Purchase_default_instance_;
class StartLoad;
class StartLoadDefaultTypeInternal;
extern StartLoadDefaultTypeInternal _StartLoad_default_instance_;
class UACommands;
class UACommandsDefaultTypeInternal;
extern UACommandsDefaultTypeInternal _UACommands_default_instance_;
class Warehouse;
class WarehouseDefaultTypeInternal;
extern WarehouseDefaultTypeInternal _Warehouse_default_instance_;

// ===================================================================

class Loaded : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Loaded) */ {
 public:
  Loaded();
  virtual ~Loaded();

  Loaded(const Loaded& from);

  inline Loaded& operator=(const Loaded& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Loaded(Loaded&& from) noexcept
    : Loaded() {
    *this = ::std::move(from);
  }

  inline Loaded& operator=(Loaded&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Loaded& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Loaded* internal_default_instance() {
    return reinterpret_cast<const Loaded*>(
               &_Loaded_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(Loaded* other);
  friend void swap(Loaded& a, Loaded& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Loaded* New() const PROTOBUF_FINAL { return New(NULL); }

  Loaded* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Loaded& from);
  void MergeFrom(const Loaded& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Loaded* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int64 packageid = 1;
  bool has_packageid() const;
  void clear_packageid();
  static const int kPackageidFieldNumber = 1;
  ::google::protobuf::int64 packageid() const;
  void set_packageid(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:Loaded)
 private:
  void set_has_packageid();
  void clear_has_packageid();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int64 packageid_;
  friend struct ::protobuf_uacmt_2eproto::TableStruct;
  friend void ::protobuf_uacmt_2eproto::InitDefaultsLoadedImpl();
};
// -------------------------------------------------------------------

class Product : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Product) */ {
 public:
  Product();
  virtual ~Product();

  Product(const Product& from);

  inline Product& operator=(const Product& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Product(Product&& from) noexcept
    : Product() {
    *this = ::std::move(from);
  }

  inline Product& operator=(Product&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Product& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Product* internal_default_instance() {
    return reinterpret_cast<const Product*>(
               &_Product_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void Swap(Product* other);
  friend void swap(Product& a, Product& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Product* New() const PROTOBUF_FINAL { return New(NULL); }

  Product* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Product& from);
  void MergeFrom(const Product& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Product* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string description = 2;
  bool has_description() const;
  void clear_description();
  static const int kDescriptionFieldNumber = 2;
  const ::std::string& description() const;
  void set_description(const ::std::string& value);
  #if LANG_CXX11
  void set_description(::std::string&& value);
  #endif
  void set_description(const char* value);
  void set_description(const char* value, size_t size);
  ::std::string* mutable_description();
  ::std::string* release_description();
  void set_allocated_description(::std::string* description);

  // required int64 id = 1;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 1;
  ::google::protobuf::int64 id() const;
  void set_id(::google::protobuf::int64 value);

  // required int32 count = 3;
  bool has_count() const;
  void clear_count();
  static const int kCountFieldNumber = 3;
  ::google::protobuf::int32 count() const;
  void set_count(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:Product)
 private:
  void set_has_id();
  void clear_has_id();
  void set_has_description();
  void clear_has_description();
  void set_has_count();
  void clear_has_count();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr description_;
  ::google::protobuf::int64 id_;
  ::google::protobuf::int32 count_;
  friend struct ::protobuf_uacmt_2eproto::TableStruct;
  friend void ::protobuf_uacmt_2eproto::InitDefaultsProductImpl();
};
// -------------------------------------------------------------------

class Warehouse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Warehouse) */ {
 public:
  Warehouse();
  virtual ~Warehouse();

  Warehouse(const Warehouse& from);

  inline Warehouse& operator=(const Warehouse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Warehouse(Warehouse&& from) noexcept
    : Warehouse() {
    *this = ::std::move(from);
  }

  inline Warehouse& operator=(Warehouse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Warehouse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Warehouse* internal_default_instance() {
    return reinterpret_cast<const Warehouse*>(
               &_Warehouse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    2;

  void Swap(Warehouse* other);
  friend void swap(Warehouse& a, Warehouse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Warehouse* New() const PROTOBUF_FINAL { return New(NULL); }

  Warehouse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Warehouse& from);
  void MergeFrom(const Warehouse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Warehouse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 whid = 1;
  bool has_whid() const;
  void clear_whid();
  static const int kWhidFieldNumber = 1;
  ::google::protobuf::int32 whid() const;
  void set_whid(::google::protobuf::int32 value);

  // required int32 whx = 2;
  bool has_whx() const;
  void clear_whx();
  static const int kWhxFieldNumber = 2;
  ::google::protobuf::int32 whx() const;
  void set_whx(::google::protobuf::int32 value);

  // required int32 why = 3;
  bool has_why() const;
  void clear_why();
  static const int kWhyFieldNumber = 3;
  ::google::protobuf::int32 why() const;
  void set_why(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:Warehouse)
 private:
  void set_has_whid();
  void clear_has_whid();
  void set_has_whx();
  void clear_has_whx();
  void set_has_why();
  void clear_has_why();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int32 whid_;
  ::google::protobuf::int32 whx_;
  ::google::protobuf::int32 why_;
  friend struct ::protobuf_uacmt_2eproto::TableStruct;
  friend void ::protobuf_uacmt_2eproto::InitDefaultsWarehouseImpl();
};
// -------------------------------------------------------------------

class Purchase : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Purchase) */ {
 public:
  Purchase();
  virtual ~Purchase();

  Purchase(const Purchase& from);

  inline Purchase& operator=(const Purchase& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Purchase(Purchase&& from) noexcept
    : Purchase() {
    *this = ::std::move(from);
  }

  inline Purchase& operator=(Purchase&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Purchase& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Purchase* internal_default_instance() {
    return reinterpret_cast<const Purchase*>(
               &_Purchase_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    3;

  void Swap(Purchase* other);
  friend void swap(Purchase& a, Purchase& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Purchase* New() const PROTOBUF_FINAL { return New(NULL); }

  Purchase* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Purchase& from);
  void MergeFrom(const Purchase& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Purchase* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .Product things = 4;
  int things_size() const;
  void clear_things();
  static const int kThingsFieldNumber = 4;
  const ::Product& things(int index) const;
  ::Product* mutable_things(int index);
  ::Product* add_things();
  ::google::protobuf::RepeatedPtrField< ::Product >*
      mutable_things();
  const ::google::protobuf::RepeatedPtrField< ::Product >&
      things() const;

  // required int32 whid = 1;
  bool has_whid() const;
  void clear_whid();
  static const int kWhidFieldNumber = 1;
  ::google::protobuf::int32 whid() const;
  void set_whid(::google::protobuf::int32 value);

  // required int32 x = 2;
  bool has_x() const;
  void clear_x();
  static const int kXFieldNumber = 2;
  ::google::protobuf::int32 x() const;
  void set_x(::google::protobuf::int32 value);

  // required int64 orderid = 5;
  bool has_orderid() const;
  void clear_orderid();
  static const int kOrderidFieldNumber = 5;
  ::google::protobuf::int64 orderid() const;
  void set_orderid(::google::protobuf::int64 value);

  // required int32 y = 3;
  bool has_y() const;
  void clear_y();
  static const int kYFieldNumber = 3;
  ::google::protobuf::int32 y() const;
  void set_y(::google::protobuf::int32 value);

  // required bool isprime = 7;
  bool has_isprime() const;
  void clear_isprime();
  static const int kIsprimeFieldNumber = 7;
  bool isprime() const;
  void set_isprime(bool value);

  // optional int64 upsuserid = 6 [default = -1];
  bool has_upsuserid() const;
  void clear_upsuserid();
  static const int kUpsuseridFieldNumber = 6;
  ::google::protobuf::int64 upsuserid() const;
  void set_upsuserid(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:Purchase)
 private:
  void set_has_whid();
  void clear_has_whid();
  void set_has_x();
  void clear_has_x();
  void set_has_y();
  void clear_has_y();
  void set_has_orderid();
  void clear_has_orderid();
  void set_has_upsuserid();
  void clear_has_upsuserid();
  void set_has_isprime();
  void clear_has_isprime();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::Product > things_;
  ::google::protobuf::int32 whid_;
  ::google::protobuf::int32 x_;
  ::google::protobuf::int64 orderid_;
  ::google::protobuf::int32 y_;
  bool isprime_;
  ::google::protobuf::int64 upsuserid_;
  friend struct ::protobuf_uacmt_2eproto::TableStruct;
  friend void ::protobuf_uacmt_2eproto::InitDefaultsPurchaseImpl();
};
// -------------------------------------------------------------------

class ChangeDes : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ChangeDes) */ {
 public:
  ChangeDes();
  virtual ~ChangeDes();

  ChangeDes(const ChangeDes& from);

  inline ChangeDes& operator=(const ChangeDes& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ChangeDes(ChangeDes&& from) noexcept
    : ChangeDes() {
    *this = ::std::move(from);
  }

  inline ChangeDes& operator=(ChangeDes&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ChangeDes& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ChangeDes* internal_default_instance() {
    return reinterpret_cast<const ChangeDes*>(
               &_ChangeDes_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    4;

  void Swap(ChangeDes* other);
  friend void swap(ChangeDes& a, ChangeDes& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ChangeDes* New() const PROTOBUF_FINAL { return New(NULL); }

  ChangeDes* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ChangeDes& from);
  void MergeFrom(const ChangeDes& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ChangeDes* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int64 pkgid = 1;
  bool has_pkgid() const;
  void clear_pkgid();
  static const int kPkgidFieldNumber = 1;
  ::google::protobuf::int64 pkgid() const;
  void set_pkgid(::google::protobuf::int64 value);

  // required int32 x = 2;
  bool has_x() const;
  void clear_x();
  static const int kXFieldNumber = 2;
  ::google::protobuf::int32 x() const;
  void set_x(::google::protobuf::int32 value);

  // required int32 y = 3;
  bool has_y() const;
  void clear_y();
  static const int kYFieldNumber = 3;
  ::google::protobuf::int32 y() const;
  void set_y(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:ChangeDes)
 private:
  void set_has_pkgid();
  void clear_has_pkgid();
  void set_has_x();
  void clear_has_x();
  void set_has_y();
  void clear_has_y();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int64 pkgid_;
  ::google::protobuf::int32 x_;
  ::google::protobuf::int32 y_;
  friend struct ::protobuf_uacmt_2eproto::TableStruct;
  friend void ::protobuf_uacmt_2eproto::InitDefaultsChangeDesImpl();
};
// -------------------------------------------------------------------

class AUCommands : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:AUCommands) */ {
 public:
  AUCommands();
  virtual ~AUCommands();

  AUCommands(const AUCommands& from);

  inline AUCommands& operator=(const AUCommands& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AUCommands(AUCommands&& from) noexcept
    : AUCommands() {
    *this = ::std::move(from);
  }

  inline AUCommands& operator=(AUCommands&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AUCommands& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const AUCommands* internal_default_instance() {
    return reinterpret_cast<const AUCommands*>(
               &_AUCommands_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    5;

  void Swap(AUCommands* other);
  friend void swap(AUCommands& a, AUCommands& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AUCommands* New() const PROTOBUF_FINAL { return New(NULL); }

  AUCommands* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AUCommands& from);
  void MergeFrom(const AUCommands& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AUCommands* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .Warehouse whinfo = 5;
  int whinfo_size() const;
  void clear_whinfo();
  static const int kWhinfoFieldNumber = 5;
  const ::Warehouse& whinfo(int index) const;
  ::Warehouse* mutable_whinfo(int index);
  ::Warehouse* add_whinfo();
  ::google::protobuf::RepeatedPtrField< ::Warehouse >*
      mutable_whinfo();
  const ::google::protobuf::RepeatedPtrField< ::Warehouse >&
      whinfo() const;

  // optional .Purchase pc = 1;
  bool has_pc() const;
  void clear_pc();
  static const int kPcFieldNumber = 1;
  const ::Purchase& pc() const;
  ::Purchase* release_pc();
  ::Purchase* mutable_pc();
  void set_allocated_pc(::Purchase* pc);

  // optional .Loaded ldd = 2;
  bool has_ldd() const;
  void clear_ldd();
  static const int kLddFieldNumber = 2;
  const ::Loaded& ldd() const;
  ::Loaded* release_ldd();
  ::Loaded* mutable_ldd();
  void set_allocated_ldd(::Loaded* ldd);

  // optional .ChangeDes chdes = 3;
  bool has_chdes() const;
  void clear_chdes();
  static const int kChdesFieldNumber = 3;
  const ::ChangeDes& chdes() const;
  ::ChangeDes* release_chdes();
  ::ChangeDes* mutable_chdes();
  void set_allocated_chdes(::ChangeDes* chdes);

  // optional bool finished = 4;
  bool has_finished() const;
  void clear_finished();
  static const int kFinishedFieldNumber = 4;
  bool finished() const;
  void set_finished(bool value);

  // @@protoc_insertion_point(class_scope:AUCommands)
 private:
  void set_has_pc();
  void clear_has_pc();
  void set_has_ldd();
  void clear_has_ldd();
  void set_has_chdes();
  void clear_has_chdes();
  void set_has_finished();
  void clear_has_finished();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::Warehouse > whinfo_;
  ::Purchase* pc_;
  ::Loaded* ldd_;
  ::ChangeDes* chdes_;
  bool finished_;
  friend struct ::protobuf_uacmt_2eproto::TableStruct;
  friend void ::protobuf_uacmt_2eproto::InitDefaultsAUCommandsImpl();
};
// -------------------------------------------------------------------

class PackageStatus : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:PackageStatus) */ {
 public:
  PackageStatus();
  virtual ~PackageStatus();

  PackageStatus(const PackageStatus& from);

  inline PackageStatus& operator=(const PackageStatus& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PackageStatus(PackageStatus&& from) noexcept
    : PackageStatus() {
    *this = ::std::move(from);
  }

  inline PackageStatus& operator=(PackageStatus&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PackageStatus& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PackageStatus* internal_default_instance() {
    return reinterpret_cast<const PackageStatus*>(
               &_PackageStatus_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    6;

  void Swap(PackageStatus* other);
  friend void swap(PackageStatus& a, PackageStatus& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PackageStatus* New() const PROTOBUF_FINAL { return New(NULL); }

  PackageStatus* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const PackageStatus& from);
  void MergeFrom(const PackageStatus& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(PackageStatus* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string status = 2;
  bool has_status() const;
  void clear_status();
  static const int kStatusFieldNumber = 2;
  const ::std::string& status() const;
  void set_status(const ::std::string& value);
  #if LANG_CXX11
  void set_status(::std::string&& value);
  #endif
  void set_status(const char* value);
  void set_status(const char* value, size_t size);
  ::std::string* mutable_status();
  ::std::string* release_status();
  void set_allocated_status(::std::string* status);

  // required int64 pkgid = 1;
  bool has_pkgid() const;
  void clear_pkgid();
  static const int kPkgidFieldNumber = 1;
  ::google::protobuf::int64 pkgid() const;
  void set_pkgid(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:PackageStatus)
 private:
  void set_has_pkgid();
  void clear_has_pkgid();
  void set_has_status();
  void clear_has_status();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr status_;
  ::google::protobuf::int64 pkgid_;
  friend struct ::protobuf_uacmt_2eproto::TableStruct;
  friend void ::protobuf_uacmt_2eproto::InitDefaultsPackageStatusImpl();
};
// -------------------------------------------------------------------

class DesChangeResult : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:DesChangeResult) */ {
 public:
  DesChangeResult();
  virtual ~DesChangeResult();

  DesChangeResult(const DesChangeResult& from);

  inline DesChangeResult& operator=(const DesChangeResult& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  DesChangeResult(DesChangeResult&& from) noexcept
    : DesChangeResult() {
    *this = ::std::move(from);
  }

  inline DesChangeResult& operator=(DesChangeResult&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DesChangeResult& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const DesChangeResult* internal_default_instance() {
    return reinterpret_cast<const DesChangeResult*>(
               &_DesChangeResult_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    7;

  void Swap(DesChangeResult* other);
  friend void swap(DesChangeResult& a, DesChangeResult& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline DesChangeResult* New() const PROTOBUF_FINAL { return New(NULL); }

  DesChangeResult* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const DesChangeResult& from);
  void MergeFrom(const DesChangeResult& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(DesChangeResult* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int64 pkgid = 1;
  bool has_pkgid() const;
  void clear_pkgid();
  static const int kPkgidFieldNumber = 1;
  ::google::protobuf::int64 pkgid() const;
  void set_pkgid(::google::protobuf::int64 value);

  // required bool res = 2;
  bool has_res() const;
  void clear_res();
  static const int kResFieldNumber = 2;
  bool res() const;
  void set_res(bool value);

  // @@protoc_insertion_point(class_scope:DesChangeResult)
 private:
  void set_has_pkgid();
  void clear_has_pkgid();
  void set_has_res();
  void clear_has_res();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int64 pkgid_;
  bool res_;
  friend struct ::protobuf_uacmt_2eproto::TableStruct;
  friend void ::protobuf_uacmt_2eproto::InitDefaultsDesChangeResultImpl();
};
// -------------------------------------------------------------------

class StartLoad : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:StartLoad) */ {
 public:
  StartLoad();
  virtual ~StartLoad();

  StartLoad(const StartLoad& from);

  inline StartLoad& operator=(const StartLoad& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  StartLoad(StartLoad&& from) noexcept
    : StartLoad() {
    *this = ::std::move(from);
  }

  inline StartLoad& operator=(StartLoad&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const StartLoad& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const StartLoad* internal_default_instance() {
    return reinterpret_cast<const StartLoad*>(
               &_StartLoad_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    8;

  void Swap(StartLoad* other);
  friend void swap(StartLoad& a, StartLoad& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline StartLoad* New() const PROTOBUF_FINAL { return New(NULL); }

  StartLoad* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const StartLoad& from);
  void MergeFrom(const StartLoad& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(StartLoad* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated int64 packageid = 3;
  int packageid_size() const;
  void clear_packageid();
  static const int kPackageidFieldNumber = 3;
  ::google::protobuf::int64 packageid(int index) const;
  void set_packageid(int index, ::google::protobuf::int64 value);
  void add_packageid(::google::protobuf::int64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
      packageid() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
      mutable_packageid();

  // required int32 whid = 1;
  bool has_whid() const;
  void clear_whid();
  static const int kWhidFieldNumber = 1;
  ::google::protobuf::int32 whid() const;
  void set_whid(::google::protobuf::int32 value);

  // required int32 truckid = 2;
  bool has_truckid() const;
  void clear_truckid();
  static const int kTruckidFieldNumber = 2;
  ::google::protobuf::int32 truckid() const;
  void set_truckid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:StartLoad)
 private:
  void set_has_whid();
  void clear_has_whid();
  void set_has_truckid();
  void clear_has_truckid();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 > packageid_;
  ::google::protobuf::int32 whid_;
  ::google::protobuf::int32 truckid_;
  friend struct ::protobuf_uacmt_2eproto::TableStruct;
  friend void ::protobuf_uacmt_2eproto::InitDefaultsStartLoadImpl();
};
// -------------------------------------------------------------------

class PackageID : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:PackageID) */ {
 public:
  PackageID();
  virtual ~PackageID();

  PackageID(const PackageID& from);

  inline PackageID& operator=(const PackageID& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PackageID(PackageID&& from) noexcept
    : PackageID() {
    *this = ::std::move(from);
  }

  inline PackageID& operator=(PackageID&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PackageID& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PackageID* internal_default_instance() {
    return reinterpret_cast<const PackageID*>(
               &_PackageID_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    9;

  void Swap(PackageID* other);
  friend void swap(PackageID& a, PackageID& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PackageID* New() const PROTOBUF_FINAL { return New(NULL); }

  PackageID* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const PackageID& from);
  void MergeFrom(const PackageID& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(PackageID* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int64 pkgid = 1;
  bool has_pkgid() const;
  void clear_pkgid();
  static const int kPkgidFieldNumber = 1;
  ::google::protobuf::int64 pkgid() const;
  void set_pkgid(::google::protobuf::int64 value);

  // required int64 orderid = 2;
  bool has_orderid() const;
  void clear_orderid();
  static const int kOrderidFieldNumber = 2;
  ::google::protobuf::int64 orderid() const;
  void set_orderid(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:PackageID)
 private:
  void set_has_pkgid();
  void clear_has_pkgid();
  void set_has_orderid();
  void clear_has_orderid();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int64 pkgid_;
  ::google::protobuf::int64 orderid_;
  friend struct ::protobuf_uacmt_2eproto::TableStruct;
  friend void ::protobuf_uacmt_2eproto::InitDefaultsPackageIDImpl();
};
// -------------------------------------------------------------------

class UACommands : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:UACommands) */ {
 public:
  UACommands();
  virtual ~UACommands();

  UACommands(const UACommands& from);

  inline UACommands& operator=(const UACommands& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  UACommands(UACommands&& from) noexcept
    : UACommands() {
    *this = ::std::move(from);
  }

  inline UACommands& operator=(UACommands&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UACommands& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const UACommands* internal_default_instance() {
    return reinterpret_cast<const UACommands*>(
               &_UACommands_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    10;

  void Swap(UACommands* other);
  friend void swap(UACommands& a, UACommands& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline UACommands* New() const PROTOBUF_FINAL { return New(NULL); }

  UACommands* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const UACommands& from);
  void MergeFrom(const UACommands& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(UACommands* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .StartLoad sl = 1;
  int sl_size() const;
  void clear_sl();
  static const int kSlFieldNumber = 1;
  const ::StartLoad& sl(int index) const;
  ::StartLoad* mutable_sl(int index);
  ::StartLoad* add_sl();
  ::google::protobuf::RepeatedPtrField< ::StartLoad >*
      mutable_sl();
  const ::google::protobuf::RepeatedPtrField< ::StartLoad >&
      sl() const;

  // repeated .PackageStatus pks = 3;
  int pks_size() const;
  void clear_pks();
  static const int kPksFieldNumber = 3;
  const ::PackageStatus& pks(int index) const;
  ::PackageStatus* mutable_pks(int index);
  ::PackageStatus* add_pks();
  ::google::protobuf::RepeatedPtrField< ::PackageStatus >*
      mutable_pks();
  const ::google::protobuf::RepeatedPtrField< ::PackageStatus >&
      pks() const;

  // optional .PackageID pid = 2;
  bool has_pid() const;
  void clear_pid();
  static const int kPidFieldNumber = 2;
  const ::PackageID& pid() const;
  ::PackageID* release_pid();
  ::PackageID* mutable_pid();
  void set_allocated_pid(::PackageID* pid);

  // optional .DesChangeResult dcr = 4;
  bool has_dcr() const;
  void clear_dcr();
  static const int kDcrFieldNumber = 4;
  const ::DesChangeResult& dcr() const;
  ::DesChangeResult* release_dcr();
  ::DesChangeResult* mutable_dcr();
  void set_allocated_dcr(::DesChangeResult* dcr);

  // optional int64 worldid = 5;
  bool has_worldid() const;
  void clear_worldid();
  static const int kWorldidFieldNumber = 5;
  ::google::protobuf::int64 worldid() const;
  void set_worldid(::google::protobuf::int64 value);

  // optional bool disconnect = 6;
  bool has_disconnect() const;
  void clear_disconnect();
  static const int kDisconnectFieldNumber = 6;
  bool disconnect() const;
  void set_disconnect(bool value);

  // @@protoc_insertion_point(class_scope:UACommands)
 private:
  void set_has_pid();
  void clear_has_pid();
  void set_has_dcr();
  void clear_has_dcr();
  void set_has_worldid();
  void clear_has_worldid();
  void set_has_disconnect();
  void clear_has_disconnect();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::StartLoad > sl_;
  ::google::protobuf::RepeatedPtrField< ::PackageStatus > pks_;
  ::PackageID* pid_;
  ::DesChangeResult* dcr_;
  ::google::protobuf::int64 worldid_;
  bool disconnect_;
  friend struct ::protobuf_uacmt_2eproto::TableStruct;
  friend void ::protobuf_uacmt_2eproto::InitDefaultsUACommandsImpl();
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// Loaded

// required int64 packageid = 1;
inline bool Loaded::has_packageid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Loaded::set_has_packageid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Loaded::clear_has_packageid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Loaded::clear_packageid() {
  packageid_ = GOOGLE_LONGLONG(0);
  clear_has_packageid();
}
inline ::google::protobuf::int64 Loaded::packageid() const {
  // @@protoc_insertion_point(field_get:Loaded.packageid)
  return packageid_;
}
inline void Loaded::set_packageid(::google::protobuf::int64 value) {
  set_has_packageid();
  packageid_ = value;
  // @@protoc_insertion_point(field_set:Loaded.packageid)
}

// -------------------------------------------------------------------

// Product

// required int64 id = 1;
inline bool Product::has_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Product::set_has_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Product::clear_has_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Product::clear_id() {
  id_ = GOOGLE_LONGLONG(0);
  clear_has_id();
}
inline ::google::protobuf::int64 Product::id() const {
  // @@protoc_insertion_point(field_get:Product.id)
  return id_;
}
inline void Product::set_id(::google::protobuf::int64 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:Product.id)
}

// required string description = 2;
inline bool Product::has_description() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Product::set_has_description() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Product::clear_has_description() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Product::clear_description() {
  description_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_description();
}
inline const ::std::string& Product::description() const {
  // @@protoc_insertion_point(field_get:Product.description)
  return description_.GetNoArena();
}
inline void Product::set_description(const ::std::string& value) {
  set_has_description();
  description_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Product.description)
}
#if LANG_CXX11
inline void Product::set_description(::std::string&& value) {
  set_has_description();
  description_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Product.description)
}
#endif
inline void Product::set_description(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_description();
  description_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Product.description)
}
inline void Product::set_description(const char* value, size_t size) {
  set_has_description();
  description_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Product.description)
}
inline ::std::string* Product::mutable_description() {
  set_has_description();
  // @@protoc_insertion_point(field_mutable:Product.description)
  return description_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Product::release_description() {
  // @@protoc_insertion_point(field_release:Product.description)
  clear_has_description();
  return description_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Product::set_allocated_description(::std::string* description) {
  if (description != NULL) {
    set_has_description();
  } else {
    clear_has_description();
  }
  description_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), description);
  // @@protoc_insertion_point(field_set_allocated:Product.description)
}

// required int32 count = 3;
inline bool Product::has_count() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Product::set_has_count() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Product::clear_has_count() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Product::clear_count() {
  count_ = 0;
  clear_has_count();
}
inline ::google::protobuf::int32 Product::count() const {
  // @@protoc_insertion_point(field_get:Product.count)
  return count_;
}
inline void Product::set_count(::google::protobuf::int32 value) {
  set_has_count();
  count_ = value;
  // @@protoc_insertion_point(field_set:Product.count)
}

// -------------------------------------------------------------------

// Warehouse

// required int32 whid = 1;
inline bool Warehouse::has_whid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Warehouse::set_has_whid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Warehouse::clear_has_whid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Warehouse::clear_whid() {
  whid_ = 0;
  clear_has_whid();
}
inline ::google::protobuf::int32 Warehouse::whid() const {
  // @@protoc_insertion_point(field_get:Warehouse.whid)
  return whid_;
}
inline void Warehouse::set_whid(::google::protobuf::int32 value) {
  set_has_whid();
  whid_ = value;
  // @@protoc_insertion_point(field_set:Warehouse.whid)
}

// required int32 whx = 2;
inline bool Warehouse::has_whx() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Warehouse::set_has_whx() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Warehouse::clear_has_whx() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Warehouse::clear_whx() {
  whx_ = 0;
  clear_has_whx();
}
inline ::google::protobuf::int32 Warehouse::whx() const {
  // @@protoc_insertion_point(field_get:Warehouse.whx)
  return whx_;
}
inline void Warehouse::set_whx(::google::protobuf::int32 value) {
  set_has_whx();
  whx_ = value;
  // @@protoc_insertion_point(field_set:Warehouse.whx)
}

// required int32 why = 3;
inline bool Warehouse::has_why() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Warehouse::set_has_why() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Warehouse::clear_has_why() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Warehouse::clear_why() {
  why_ = 0;
  clear_has_why();
}
inline ::google::protobuf::int32 Warehouse::why() const {
  // @@protoc_insertion_point(field_get:Warehouse.why)
  return why_;
}
inline void Warehouse::set_why(::google::protobuf::int32 value) {
  set_has_why();
  why_ = value;
  // @@protoc_insertion_point(field_set:Warehouse.why)
}

// -------------------------------------------------------------------

// Purchase

// required int32 whid = 1;
inline bool Purchase::has_whid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Purchase::set_has_whid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Purchase::clear_has_whid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Purchase::clear_whid() {
  whid_ = 0;
  clear_has_whid();
}
inline ::google::protobuf::int32 Purchase::whid() const {
  // @@protoc_insertion_point(field_get:Purchase.whid)
  return whid_;
}
inline void Purchase::set_whid(::google::protobuf::int32 value) {
  set_has_whid();
  whid_ = value;
  // @@protoc_insertion_point(field_set:Purchase.whid)
}

// required int32 x = 2;
inline bool Purchase::has_x() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Purchase::set_has_x() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Purchase::clear_has_x() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Purchase::clear_x() {
  x_ = 0;
  clear_has_x();
}
inline ::google::protobuf::int32 Purchase::x() const {
  // @@protoc_insertion_point(field_get:Purchase.x)
  return x_;
}
inline void Purchase::set_x(::google::protobuf::int32 value) {
  set_has_x();
  x_ = value;
  // @@protoc_insertion_point(field_set:Purchase.x)
}

// required int32 y = 3;
inline bool Purchase::has_y() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Purchase::set_has_y() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Purchase::clear_has_y() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Purchase::clear_y() {
  y_ = 0;
  clear_has_y();
}
inline ::google::protobuf::int32 Purchase::y() const {
  // @@protoc_insertion_point(field_get:Purchase.y)
  return y_;
}
inline void Purchase::set_y(::google::protobuf::int32 value) {
  set_has_y();
  y_ = value;
  // @@protoc_insertion_point(field_set:Purchase.y)
}

// repeated .Product things = 4;
inline int Purchase::things_size() const {
  return things_.size();
}
inline void Purchase::clear_things() {
  things_.Clear();
}
inline const ::Product& Purchase::things(int index) const {
  // @@protoc_insertion_point(field_get:Purchase.things)
  return things_.Get(index);
}
inline ::Product* Purchase::mutable_things(int index) {
  // @@protoc_insertion_point(field_mutable:Purchase.things)
  return things_.Mutable(index);
}
inline ::Product* Purchase::add_things() {
  // @@protoc_insertion_point(field_add:Purchase.things)
  return things_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::Product >*
Purchase::mutable_things() {
  // @@protoc_insertion_point(field_mutable_list:Purchase.things)
  return &things_;
}
inline const ::google::protobuf::RepeatedPtrField< ::Product >&
Purchase::things() const {
  // @@protoc_insertion_point(field_list:Purchase.things)
  return things_;
}

// required int64 orderid = 5;
inline bool Purchase::has_orderid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Purchase::set_has_orderid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Purchase::clear_has_orderid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Purchase::clear_orderid() {
  orderid_ = GOOGLE_LONGLONG(0);
  clear_has_orderid();
}
inline ::google::protobuf::int64 Purchase::orderid() const {
  // @@protoc_insertion_point(field_get:Purchase.orderid)
  return orderid_;
}
inline void Purchase::set_orderid(::google::protobuf::int64 value) {
  set_has_orderid();
  orderid_ = value;
  // @@protoc_insertion_point(field_set:Purchase.orderid)
}

// optional int64 upsuserid = 6 [default = -1];
inline bool Purchase::has_upsuserid() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void Purchase::set_has_upsuserid() {
  _has_bits_[0] |= 0x00000020u;
}
inline void Purchase::clear_has_upsuserid() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void Purchase::clear_upsuserid() {
  upsuserid_ = GOOGLE_LONGLONG(-1);
  clear_has_upsuserid();
}
inline ::google::protobuf::int64 Purchase::upsuserid() const {
  // @@protoc_insertion_point(field_get:Purchase.upsuserid)
  return upsuserid_;
}
inline void Purchase::set_upsuserid(::google::protobuf::int64 value) {
  set_has_upsuserid();
  upsuserid_ = value;
  // @@protoc_insertion_point(field_set:Purchase.upsuserid)
}

// required bool isprime = 7;
inline bool Purchase::has_isprime() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void Purchase::set_has_isprime() {
  _has_bits_[0] |= 0x00000010u;
}
inline void Purchase::clear_has_isprime() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void Purchase::clear_isprime() {
  isprime_ = false;
  clear_has_isprime();
}
inline bool Purchase::isprime() const {
  // @@protoc_insertion_point(field_get:Purchase.isprime)
  return isprime_;
}
inline void Purchase::set_isprime(bool value) {
  set_has_isprime();
  isprime_ = value;
  // @@protoc_insertion_point(field_set:Purchase.isprime)
}

// -------------------------------------------------------------------

// ChangeDes

// required int64 pkgid = 1;
inline bool ChangeDes::has_pkgid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ChangeDes::set_has_pkgid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ChangeDes::clear_has_pkgid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ChangeDes::clear_pkgid() {
  pkgid_ = GOOGLE_LONGLONG(0);
  clear_has_pkgid();
}
inline ::google::protobuf::int64 ChangeDes::pkgid() const {
  // @@protoc_insertion_point(field_get:ChangeDes.pkgid)
  return pkgid_;
}
inline void ChangeDes::set_pkgid(::google::protobuf::int64 value) {
  set_has_pkgid();
  pkgid_ = value;
  // @@protoc_insertion_point(field_set:ChangeDes.pkgid)
}

// required int32 x = 2;
inline bool ChangeDes::has_x() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ChangeDes::set_has_x() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ChangeDes::clear_has_x() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ChangeDes::clear_x() {
  x_ = 0;
  clear_has_x();
}
inline ::google::protobuf::int32 ChangeDes::x() const {
  // @@protoc_insertion_point(field_get:ChangeDes.x)
  return x_;
}
inline void ChangeDes::set_x(::google::protobuf::int32 value) {
  set_has_x();
  x_ = value;
  // @@protoc_insertion_point(field_set:ChangeDes.x)
}

// required int32 y = 3;
inline bool ChangeDes::has_y() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ChangeDes::set_has_y() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ChangeDes::clear_has_y() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ChangeDes::clear_y() {
  y_ = 0;
  clear_has_y();
}
inline ::google::protobuf::int32 ChangeDes::y() const {
  // @@protoc_insertion_point(field_get:ChangeDes.y)
  return y_;
}
inline void ChangeDes::set_y(::google::protobuf::int32 value) {
  set_has_y();
  y_ = value;
  // @@protoc_insertion_point(field_set:ChangeDes.y)
}

// -------------------------------------------------------------------

// AUCommands

// optional .Purchase pc = 1;
inline bool AUCommands::has_pc() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AUCommands::set_has_pc() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AUCommands::clear_has_pc() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AUCommands::clear_pc() {
  if (pc_ != NULL) pc_->Clear();
  clear_has_pc();
}
inline const ::Purchase& AUCommands::pc() const {
  const ::Purchase* p = pc_;
  // @@protoc_insertion_point(field_get:AUCommands.pc)
  return p != NULL ? *p : *reinterpret_cast<const ::Purchase*>(
      &::_Purchase_default_instance_);
}
inline ::Purchase* AUCommands::release_pc() {
  // @@protoc_insertion_point(field_release:AUCommands.pc)
  clear_has_pc();
  ::Purchase* temp = pc_;
  pc_ = NULL;
  return temp;
}
inline ::Purchase* AUCommands::mutable_pc() {
  set_has_pc();
  if (pc_ == NULL) {
    pc_ = new ::Purchase;
  }
  // @@protoc_insertion_point(field_mutable:AUCommands.pc)
  return pc_;
}
inline void AUCommands::set_allocated_pc(::Purchase* pc) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete pc_;
  }
  if (pc) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      pc = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, pc, submessage_arena);
    }
    set_has_pc();
  } else {
    clear_has_pc();
  }
  pc_ = pc;
  // @@protoc_insertion_point(field_set_allocated:AUCommands.pc)
}

// optional .Loaded ldd = 2;
inline bool AUCommands::has_ldd() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void AUCommands::set_has_ldd() {
  _has_bits_[0] |= 0x00000002u;
}
inline void AUCommands::clear_has_ldd() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void AUCommands::clear_ldd() {
  if (ldd_ != NULL) ldd_->Clear();
  clear_has_ldd();
}
inline const ::Loaded& AUCommands::ldd() const {
  const ::Loaded* p = ldd_;
  // @@protoc_insertion_point(field_get:AUCommands.ldd)
  return p != NULL ? *p : *reinterpret_cast<const ::Loaded*>(
      &::_Loaded_default_instance_);
}
inline ::Loaded* AUCommands::release_ldd() {
  // @@protoc_insertion_point(field_release:AUCommands.ldd)
  clear_has_ldd();
  ::Loaded* temp = ldd_;
  ldd_ = NULL;
  return temp;
}
inline ::Loaded* AUCommands::mutable_ldd() {
  set_has_ldd();
  if (ldd_ == NULL) {
    ldd_ = new ::Loaded;
  }
  // @@protoc_insertion_point(field_mutable:AUCommands.ldd)
  return ldd_;
}
inline void AUCommands::set_allocated_ldd(::Loaded* ldd) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete ldd_;
  }
  if (ldd) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      ldd = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, ldd, submessage_arena);
    }
    set_has_ldd();
  } else {
    clear_has_ldd();
  }
  ldd_ = ldd;
  // @@protoc_insertion_point(field_set_allocated:AUCommands.ldd)
}

// optional .ChangeDes chdes = 3;
inline bool AUCommands::has_chdes() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void AUCommands::set_has_chdes() {
  _has_bits_[0] |= 0x00000004u;
}
inline void AUCommands::clear_has_chdes() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void AUCommands::clear_chdes() {
  if (chdes_ != NULL) chdes_->Clear();
  clear_has_chdes();
}
inline const ::ChangeDes& AUCommands::chdes() const {
  const ::ChangeDes* p = chdes_;
  // @@protoc_insertion_point(field_get:AUCommands.chdes)
  return p != NULL ? *p : *reinterpret_cast<const ::ChangeDes*>(
      &::_ChangeDes_default_instance_);
}
inline ::ChangeDes* AUCommands::release_chdes() {
  // @@protoc_insertion_point(field_release:AUCommands.chdes)
  clear_has_chdes();
  ::ChangeDes* temp = chdes_;
  chdes_ = NULL;
  return temp;
}
inline ::ChangeDes* AUCommands::mutable_chdes() {
  set_has_chdes();
  if (chdes_ == NULL) {
    chdes_ = new ::ChangeDes;
  }
  // @@protoc_insertion_point(field_mutable:AUCommands.chdes)
  return chdes_;
}
inline void AUCommands::set_allocated_chdes(::ChangeDes* chdes) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete chdes_;
  }
  if (chdes) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      chdes = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, chdes, submessage_arena);
    }
    set_has_chdes();
  } else {
    clear_has_chdes();
  }
  chdes_ = chdes;
  // @@protoc_insertion_point(field_set_allocated:AUCommands.chdes)
}

// optional bool finished = 4;
inline bool AUCommands::has_finished() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void AUCommands::set_has_finished() {
  _has_bits_[0] |= 0x00000008u;
}
inline void AUCommands::clear_has_finished() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void AUCommands::clear_finished() {
  finished_ = false;
  clear_has_finished();
}
inline bool AUCommands::finished() const {
  // @@protoc_insertion_point(field_get:AUCommands.finished)
  return finished_;
}
inline void AUCommands::set_finished(bool value) {
  set_has_finished();
  finished_ = value;
  // @@protoc_insertion_point(field_set:AUCommands.finished)
}

// repeated .Warehouse whinfo = 5;
inline int AUCommands::whinfo_size() const {
  return whinfo_.size();
}
inline void AUCommands::clear_whinfo() {
  whinfo_.Clear();
}
inline const ::Warehouse& AUCommands::whinfo(int index) const {
  // @@protoc_insertion_point(field_get:AUCommands.whinfo)
  return whinfo_.Get(index);
}
inline ::Warehouse* AUCommands::mutable_whinfo(int index) {
  // @@protoc_insertion_point(field_mutable:AUCommands.whinfo)
  return whinfo_.Mutable(index);
}
inline ::Warehouse* AUCommands::add_whinfo() {
  // @@protoc_insertion_point(field_add:AUCommands.whinfo)
  return whinfo_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::Warehouse >*
AUCommands::mutable_whinfo() {
  // @@protoc_insertion_point(field_mutable_list:AUCommands.whinfo)
  return &whinfo_;
}
inline const ::google::protobuf::RepeatedPtrField< ::Warehouse >&
AUCommands::whinfo() const {
  // @@protoc_insertion_point(field_list:AUCommands.whinfo)
  return whinfo_;
}

// -------------------------------------------------------------------

// PackageStatus

// required int64 pkgid = 1;
inline bool PackageStatus::has_pkgid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PackageStatus::set_has_pkgid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PackageStatus::clear_has_pkgid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PackageStatus::clear_pkgid() {
  pkgid_ = GOOGLE_LONGLONG(0);
  clear_has_pkgid();
}
inline ::google::protobuf::int64 PackageStatus::pkgid() const {
  // @@protoc_insertion_point(field_get:PackageStatus.pkgid)
  return pkgid_;
}
inline void PackageStatus::set_pkgid(::google::protobuf::int64 value) {
  set_has_pkgid();
  pkgid_ = value;
  // @@protoc_insertion_point(field_set:PackageStatus.pkgid)
}

// required string status = 2;
inline bool PackageStatus::has_status() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PackageStatus::set_has_status() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PackageStatus::clear_has_status() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PackageStatus::clear_status() {
  status_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_status();
}
inline const ::std::string& PackageStatus::status() const {
  // @@protoc_insertion_point(field_get:PackageStatus.status)
  return status_.GetNoArena();
}
inline void PackageStatus::set_status(const ::std::string& value) {
  set_has_status();
  status_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:PackageStatus.status)
}
#if LANG_CXX11
inline void PackageStatus::set_status(::std::string&& value) {
  set_has_status();
  status_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:PackageStatus.status)
}
#endif
inline void PackageStatus::set_status(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_status();
  status_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:PackageStatus.status)
}
inline void PackageStatus::set_status(const char* value, size_t size) {
  set_has_status();
  status_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:PackageStatus.status)
}
inline ::std::string* PackageStatus::mutable_status() {
  set_has_status();
  // @@protoc_insertion_point(field_mutable:PackageStatus.status)
  return status_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PackageStatus::release_status() {
  // @@protoc_insertion_point(field_release:PackageStatus.status)
  clear_has_status();
  return status_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PackageStatus::set_allocated_status(::std::string* status) {
  if (status != NULL) {
    set_has_status();
  } else {
    clear_has_status();
  }
  status_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), status);
  // @@protoc_insertion_point(field_set_allocated:PackageStatus.status)
}

// -------------------------------------------------------------------

// DesChangeResult

// required int64 pkgid = 1;
inline bool DesChangeResult::has_pkgid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DesChangeResult::set_has_pkgid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DesChangeResult::clear_has_pkgid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DesChangeResult::clear_pkgid() {
  pkgid_ = GOOGLE_LONGLONG(0);
  clear_has_pkgid();
}
inline ::google::protobuf::int64 DesChangeResult::pkgid() const {
  // @@protoc_insertion_point(field_get:DesChangeResult.pkgid)
  return pkgid_;
}
inline void DesChangeResult::set_pkgid(::google::protobuf::int64 value) {
  set_has_pkgid();
  pkgid_ = value;
  // @@protoc_insertion_point(field_set:DesChangeResult.pkgid)
}

// required bool res = 2;
inline bool DesChangeResult::has_res() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void DesChangeResult::set_has_res() {
  _has_bits_[0] |= 0x00000002u;
}
inline void DesChangeResult::clear_has_res() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void DesChangeResult::clear_res() {
  res_ = false;
  clear_has_res();
}
inline bool DesChangeResult::res() const {
  // @@protoc_insertion_point(field_get:DesChangeResult.res)
  return res_;
}
inline void DesChangeResult::set_res(bool value) {
  set_has_res();
  res_ = value;
  // @@protoc_insertion_point(field_set:DesChangeResult.res)
}

// -------------------------------------------------------------------

// StartLoad

// required int32 whid = 1;
inline bool StartLoad::has_whid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void StartLoad::set_has_whid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void StartLoad::clear_has_whid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void StartLoad::clear_whid() {
  whid_ = 0;
  clear_has_whid();
}
inline ::google::protobuf::int32 StartLoad::whid() const {
  // @@protoc_insertion_point(field_get:StartLoad.whid)
  return whid_;
}
inline void StartLoad::set_whid(::google::protobuf::int32 value) {
  set_has_whid();
  whid_ = value;
  // @@protoc_insertion_point(field_set:StartLoad.whid)
}

// required int32 truckid = 2;
inline bool StartLoad::has_truckid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void StartLoad::set_has_truckid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void StartLoad::clear_has_truckid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void StartLoad::clear_truckid() {
  truckid_ = 0;
  clear_has_truckid();
}
inline ::google::protobuf::int32 StartLoad::truckid() const {
  // @@protoc_insertion_point(field_get:StartLoad.truckid)
  return truckid_;
}
inline void StartLoad::set_truckid(::google::protobuf::int32 value) {
  set_has_truckid();
  truckid_ = value;
  // @@protoc_insertion_point(field_set:StartLoad.truckid)
}

// repeated int64 packageid = 3;
inline int StartLoad::packageid_size() const {
  return packageid_.size();
}
inline void StartLoad::clear_packageid() {
  packageid_.Clear();
}
inline ::google::protobuf::int64 StartLoad::packageid(int index) const {
  // @@protoc_insertion_point(field_get:StartLoad.packageid)
  return packageid_.Get(index);
}
inline void StartLoad::set_packageid(int index, ::google::protobuf::int64 value) {
  packageid_.Set(index, value);
  // @@protoc_insertion_point(field_set:StartLoad.packageid)
}
inline void StartLoad::add_packageid(::google::protobuf::int64 value) {
  packageid_.Add(value);
  // @@protoc_insertion_point(field_add:StartLoad.packageid)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
StartLoad::packageid() const {
  // @@protoc_insertion_point(field_list:StartLoad.packageid)
  return packageid_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
StartLoad::mutable_packageid() {
  // @@protoc_insertion_point(field_mutable_list:StartLoad.packageid)
  return &packageid_;
}

// -------------------------------------------------------------------

// PackageID

// required int64 pkgid = 1;
inline bool PackageID::has_pkgid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PackageID::set_has_pkgid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PackageID::clear_has_pkgid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PackageID::clear_pkgid() {
  pkgid_ = GOOGLE_LONGLONG(0);
  clear_has_pkgid();
}
inline ::google::protobuf::int64 PackageID::pkgid() const {
  // @@protoc_insertion_point(field_get:PackageID.pkgid)
  return pkgid_;
}
inline void PackageID::set_pkgid(::google::protobuf::int64 value) {
  set_has_pkgid();
  pkgid_ = value;
  // @@protoc_insertion_point(field_set:PackageID.pkgid)
}

// required int64 orderid = 2;
inline bool PackageID::has_orderid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PackageID::set_has_orderid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PackageID::clear_has_orderid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PackageID::clear_orderid() {
  orderid_ = GOOGLE_LONGLONG(0);
  clear_has_orderid();
}
inline ::google::protobuf::int64 PackageID::orderid() const {
  // @@protoc_insertion_point(field_get:PackageID.orderid)
  return orderid_;
}
inline void PackageID::set_orderid(::google::protobuf::int64 value) {
  set_has_orderid();
  orderid_ = value;
  // @@protoc_insertion_point(field_set:PackageID.orderid)
}

// -------------------------------------------------------------------

// UACommands

// repeated .StartLoad sl = 1;
inline int UACommands::sl_size() const {
  return sl_.size();
}
inline void UACommands::clear_sl() {
  sl_.Clear();
}
inline const ::StartLoad& UACommands::sl(int index) const {
  // @@protoc_insertion_point(field_get:UACommands.sl)
  return sl_.Get(index);
}
inline ::StartLoad* UACommands::mutable_sl(int index) {
  // @@protoc_insertion_point(field_mutable:UACommands.sl)
  return sl_.Mutable(index);
}
inline ::StartLoad* UACommands::add_sl() {
  // @@protoc_insertion_point(field_add:UACommands.sl)
  return sl_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::StartLoad >*
UACommands::mutable_sl() {
  // @@protoc_insertion_point(field_mutable_list:UACommands.sl)
  return &sl_;
}
inline const ::google::protobuf::RepeatedPtrField< ::StartLoad >&
UACommands::sl() const {
  // @@protoc_insertion_point(field_list:UACommands.sl)
  return sl_;
}

// optional .PackageID pid = 2;
inline bool UACommands::has_pid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UACommands::set_has_pid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void UACommands::clear_has_pid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void UACommands::clear_pid() {
  if (pid_ != NULL) pid_->Clear();
  clear_has_pid();
}
inline const ::PackageID& UACommands::pid() const {
  const ::PackageID* p = pid_;
  // @@protoc_insertion_point(field_get:UACommands.pid)
  return p != NULL ? *p : *reinterpret_cast<const ::PackageID*>(
      &::_PackageID_default_instance_);
}
inline ::PackageID* UACommands::release_pid() {
  // @@protoc_insertion_point(field_release:UACommands.pid)
  clear_has_pid();
  ::PackageID* temp = pid_;
  pid_ = NULL;
  return temp;
}
inline ::PackageID* UACommands::mutable_pid() {
  set_has_pid();
  if (pid_ == NULL) {
    pid_ = new ::PackageID;
  }
  // @@protoc_insertion_point(field_mutable:UACommands.pid)
  return pid_;
}
inline void UACommands::set_allocated_pid(::PackageID* pid) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete pid_;
  }
  if (pid) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      pid = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, pid, submessage_arena);
    }
    set_has_pid();
  } else {
    clear_has_pid();
  }
  pid_ = pid;
  // @@protoc_insertion_point(field_set_allocated:UACommands.pid)
}

// repeated .PackageStatus pks = 3;
inline int UACommands::pks_size() const {
  return pks_.size();
}
inline void UACommands::clear_pks() {
  pks_.Clear();
}
inline const ::PackageStatus& UACommands::pks(int index) const {
  // @@protoc_insertion_point(field_get:UACommands.pks)
  return pks_.Get(index);
}
inline ::PackageStatus* UACommands::mutable_pks(int index) {
  // @@protoc_insertion_point(field_mutable:UACommands.pks)
  return pks_.Mutable(index);
}
inline ::PackageStatus* UACommands::add_pks() {
  // @@protoc_insertion_point(field_add:UACommands.pks)
  return pks_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::PackageStatus >*
UACommands::mutable_pks() {
  // @@protoc_insertion_point(field_mutable_list:UACommands.pks)
  return &pks_;
}
inline const ::google::protobuf::RepeatedPtrField< ::PackageStatus >&
UACommands::pks() const {
  // @@protoc_insertion_point(field_list:UACommands.pks)
  return pks_;
}

// optional .DesChangeResult dcr = 4;
inline bool UACommands::has_dcr() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void UACommands::set_has_dcr() {
  _has_bits_[0] |= 0x00000002u;
}
inline void UACommands::clear_has_dcr() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void UACommands::clear_dcr() {
  if (dcr_ != NULL) dcr_->Clear();
  clear_has_dcr();
}
inline const ::DesChangeResult& UACommands::dcr() const {
  const ::DesChangeResult* p = dcr_;
  // @@protoc_insertion_point(field_get:UACommands.dcr)
  return p != NULL ? *p : *reinterpret_cast<const ::DesChangeResult*>(
      &::_DesChangeResult_default_instance_);
}
inline ::DesChangeResult* UACommands::release_dcr() {
  // @@protoc_insertion_point(field_release:UACommands.dcr)
  clear_has_dcr();
  ::DesChangeResult* temp = dcr_;
  dcr_ = NULL;
  return temp;
}
inline ::DesChangeResult* UACommands::mutable_dcr() {
  set_has_dcr();
  if (dcr_ == NULL) {
    dcr_ = new ::DesChangeResult;
  }
  // @@protoc_insertion_point(field_mutable:UACommands.dcr)
  return dcr_;
}
inline void UACommands::set_allocated_dcr(::DesChangeResult* dcr) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete dcr_;
  }
  if (dcr) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      dcr = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, dcr, submessage_arena);
    }
    set_has_dcr();
  } else {
    clear_has_dcr();
  }
  dcr_ = dcr;
  // @@protoc_insertion_point(field_set_allocated:UACommands.dcr)
}

// optional int64 worldid = 5;
inline bool UACommands::has_worldid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void UACommands::set_has_worldid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void UACommands::clear_has_worldid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void UACommands::clear_worldid() {
  worldid_ = GOOGLE_LONGLONG(0);
  clear_has_worldid();
}
inline ::google::protobuf::int64 UACommands::worldid() const {
  // @@protoc_insertion_point(field_get:UACommands.worldid)
  return worldid_;
}
inline void UACommands::set_worldid(::google::protobuf::int64 value) {
  set_has_worldid();
  worldid_ = value;
  // @@protoc_insertion_point(field_set:UACommands.worldid)
}

// optional bool disconnect = 6;
inline bool UACommands::has_disconnect() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void UACommands::set_has_disconnect() {
  _has_bits_[0] |= 0x00000008u;
}
inline void UACommands::clear_has_disconnect() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void UACommands::clear_disconnect() {
  disconnect_ = false;
  clear_has_disconnect();
}
inline bool UACommands::disconnect() const {
  // @@protoc_insertion_point(field_get:UACommands.disconnect)
  return disconnect_;
}
inline void UACommands::set_disconnect(bool value) {
  set_has_disconnect();
  disconnect_ = value;
  // @@protoc_insertion_point(field_set:UACommands.disconnect)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_uacmt_2eproto__INCLUDED
