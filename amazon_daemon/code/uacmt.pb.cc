// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: uacmt.proto

#include "uacmt.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)
class LoadedDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Loaded>
      _instance;
} _Loaded_default_instance_;
class ProductDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Product>
      _instance;
} _Product_default_instance_;
class WarehouseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Warehouse>
      _instance;
} _Warehouse_default_instance_;
class PurchaseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Purchase>
      _instance;
} _Purchase_default_instance_;
class ChangeDesDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ChangeDes>
      _instance;
} _ChangeDes_default_instance_;
class AUCommandsDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<AUCommands>
      _instance;
} _AUCommands_default_instance_;
class PackageStatusDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PackageStatus>
      _instance;
} _PackageStatus_default_instance_;
class DesChangeResultDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DesChangeResult>
      _instance;
} _DesChangeResult_default_instance_;
class StartLoadDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<StartLoad>
      _instance;
} _StartLoad_default_instance_;
class PackageIDDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PackageID>
      _instance;
} _PackageID_default_instance_;
class UACommandsDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<UACommands>
      _instance;
} _UACommands_default_instance_;
namespace protobuf_uacmt_2eproto {
void InitDefaultsLoadedImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_Loaded_default_instance_;
    new (ptr) ::Loaded();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Loaded::InitAsDefaultInstance();
}

void InitDefaultsLoaded() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsLoadedImpl);
}

void InitDefaultsProductImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_Product_default_instance_;
    new (ptr) ::Product();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Product::InitAsDefaultInstance();
}

void InitDefaultsProduct() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsProductImpl);
}

void InitDefaultsWarehouseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_Warehouse_default_instance_;
    new (ptr) ::Warehouse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Warehouse::InitAsDefaultInstance();
}

void InitDefaultsWarehouse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsWarehouseImpl);
}

void InitDefaultsPurchaseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_uacmt_2eproto::InitDefaultsProduct();
  {
    void* ptr = &::_Purchase_default_instance_;
    new (ptr) ::Purchase();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Purchase::InitAsDefaultInstance();
}

void InitDefaultsPurchase() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsPurchaseImpl);
}

void InitDefaultsChangeDesImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_ChangeDes_default_instance_;
    new (ptr) ::ChangeDes();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ChangeDes::InitAsDefaultInstance();
}

void InitDefaultsChangeDes() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsChangeDesImpl);
}

void InitDefaultsAUCommandsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_uacmt_2eproto::InitDefaultsPurchase();
  protobuf_uacmt_2eproto::InitDefaultsLoaded();
  protobuf_uacmt_2eproto::InitDefaultsChangeDes();
  protobuf_uacmt_2eproto::InitDefaultsWarehouse();
  {
    void* ptr = &::_AUCommands_default_instance_;
    new (ptr) ::AUCommands();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::AUCommands::InitAsDefaultInstance();
}

void InitDefaultsAUCommands() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsAUCommandsImpl);
}

void InitDefaultsPackageStatusImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_PackageStatus_default_instance_;
    new (ptr) ::PackageStatus();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::PackageStatus::InitAsDefaultInstance();
}

void InitDefaultsPackageStatus() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsPackageStatusImpl);
}

void InitDefaultsDesChangeResultImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_DesChangeResult_default_instance_;
    new (ptr) ::DesChangeResult();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::DesChangeResult::InitAsDefaultInstance();
}

void InitDefaultsDesChangeResult() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsDesChangeResultImpl);
}

void InitDefaultsStartLoadImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_StartLoad_default_instance_;
    new (ptr) ::StartLoad();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::StartLoad::InitAsDefaultInstance();
}

void InitDefaultsStartLoad() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsStartLoadImpl);
}

void InitDefaultsPackageIDImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_PackageID_default_instance_;
    new (ptr) ::PackageID();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::PackageID::InitAsDefaultInstance();
}

void InitDefaultsPackageID() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsPackageIDImpl);
}

void InitDefaultsUACommandsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_uacmt_2eproto::InitDefaultsStartLoad();
  protobuf_uacmt_2eproto::InitDefaultsPackageID();
  protobuf_uacmt_2eproto::InitDefaultsPackageStatus();
  protobuf_uacmt_2eproto::InitDefaultsDesChangeResult();
  {
    void* ptr = &::_UACommands_default_instance_;
    new (ptr) ::UACommands();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::UACommands::InitAsDefaultInstance();
}

void InitDefaultsUACommands() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsUACommandsImpl);
}

::google::protobuf::Metadata file_level_metadata[11];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Loaded, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Loaded, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Loaded, packageid_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Product, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Product, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Product, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Product, description_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Product, count_),
  1,
  0,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Warehouse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Warehouse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Warehouse, whid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Warehouse, whx_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Warehouse, why_),
  0,
  1,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Purchase, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Purchase, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Purchase, whid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Purchase, x_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Purchase, y_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Purchase, things_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Purchase, orderid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Purchase, upsuserid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Purchase, isprime_),
  1,
  2,
  4,
  ~0u,
  3,
  0,
  5,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ChangeDes, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ChangeDes, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ChangeDes, pkgid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ChangeDes, x_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ChangeDes, y_),
  0,
  1,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::AUCommands, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::AUCommands, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::AUCommands, pc_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::AUCommands, ldd_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::AUCommands, chdes_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::AUCommands, finished_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::AUCommands, whinfo_),
  0,
  1,
  2,
  3,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PackageStatus, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PackageStatus, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PackageStatus, pkgid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PackageStatus, status_),
  1,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::DesChangeResult, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::DesChangeResult, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::DesChangeResult, pkgid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::DesChangeResult, res_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::StartLoad, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::StartLoad, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::StartLoad, whid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::StartLoad, truckid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::StartLoad, packageid_),
  0,
  1,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PackageID, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PackageID, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PackageID, pkgid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PackageID, orderid_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::UACommands, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::UACommands, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::UACommands, sl_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::UACommands, pid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::UACommands, pks_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::UACommands, dcr_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::UACommands, worldid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::UACommands, disconnect_),
  ~0u,
  0,
  ~0u,
  1,
  2,
  3,
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 6, sizeof(::Loaded)},
  { 7, 15, sizeof(::Product)},
  { 18, 26, sizeof(::Warehouse)},
  { 29, 41, sizeof(::Purchase)},
  { 48, 56, sizeof(::ChangeDes)},
  { 59, 69, sizeof(::AUCommands)},
  { 74, 81, sizeof(::PackageStatus)},
  { 83, 90, sizeof(::DesChangeResult)},
  { 92, 100, sizeof(::StartLoad)},
  { 103, 110, sizeof(::PackageID)},
  { 112, 123, sizeof(::UACommands)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::_Loaded_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_Product_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_Warehouse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_Purchase_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_ChangeDes_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_AUCommands_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_PackageStatus_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_DesChangeResult_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_StartLoad_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_PackageID_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_UACommands_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "uacmt.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 11);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\013uacmt.proto\"\033\n\006Loaded\022\021\n\tpackageid\030\001 \002"
      "(\003\"9\n\007Product\022\n\n\002id\030\001 \002(\003\022\023\n\013description"
      "\030\002 \002(\t\022\r\n\005count\030\003 \002(\005\"3\n\tWarehouse\022\014\n\004wh"
      "id\030\001 \002(\005\022\013\n\003whx\030\002 \002(\005\022\013\n\003why\030\003 \002(\005\"}\n\010Pu"
      "rchase\022\014\n\004whid\030\001 \002(\005\022\t\n\001x\030\002 \002(\005\022\t\n\001y\030\003 \002"
      "(\005\022\030\n\006things\030\004 \003(\0132\010.Product\022\017\n\007orderid\030"
      "\005 \002(\003\022\021\n\tupsuserid\030\006 \001(\t\022\017\n\007isprime\030\007 \002("
      "\010\"0\n\tChangeDes\022\r\n\005pkgid\030\001 \002(\003\022\t\n\001x\030\002 \002(\005"
      "\022\t\n\001y\030\003 \002(\005\"\202\001\n\nAUCommands\022\025\n\002pc\030\001 \001(\0132\t"
      ".Purchase\022\024\n\003ldd\030\002 \001(\0132\007.Loaded\022\031\n\005chdes"
      "\030\003 \001(\0132\n.ChangeDes\022\020\n\010finished\030\004 \001(\010\022\032\n\006"
      "whinfo\030\005 \003(\0132\n.Warehouse\".\n\rPackageStatu"
      "s\022\r\n\005pkgid\030\001 \002(\003\022\016\n\006status\030\002 \002(\t\"-\n\017DesC"
      "hangeResult\022\r\n\005pkgid\030\001 \002(\003\022\013\n\003res\030\002 \002(\010\""
      "=\n\tStartLoad\022\014\n\004whid\030\001 \002(\005\022\017\n\007truckid\030\002 "
      "\002(\005\022\021\n\tpackageid\030\003 \003(\003\"+\n\tPackageID\022\r\n\005p"
      "kgid\030\001 \002(\003\022\017\n\007orderid\030\002 \002(\003\"\236\001\n\nUAComman"
      "ds\022\026\n\002sl\030\001 \003(\0132\n.StartLoad\022\027\n\003pid\030\002 \001(\0132"
      "\n.PackageID\022\033\n\003pks\030\003 \003(\0132\016.PackageStatus"
      "\022\035\n\003dcr\030\004 \001(\0132\020.DesChangeResult\022\017\n\007world"
      "id\030\005 \001(\003\022\022\n\ndisconnect\030\006 \001(\010"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 828);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "uacmt.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_uacmt_2eproto

// ===================================================================

void Loaded::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Loaded::kPackageidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Loaded::Loaded()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_uacmt_2eproto::InitDefaultsLoaded();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Loaded)
}
Loaded::Loaded(const Loaded& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  packageid_ = from.packageid_;
  // @@protoc_insertion_point(copy_constructor:Loaded)
}

void Loaded::SharedCtor() {
  _cached_size_ = 0;
  packageid_ = GOOGLE_LONGLONG(0);
}

Loaded::~Loaded() {
  // @@protoc_insertion_point(destructor:Loaded)
  SharedDtor();
}

void Loaded::SharedDtor() {
}

void Loaded::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Loaded::descriptor() {
  ::protobuf_uacmt_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_uacmt_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Loaded& Loaded::default_instance() {
  ::protobuf_uacmt_2eproto::InitDefaultsLoaded();
  return *internal_default_instance();
}

Loaded* Loaded::New(::google::protobuf::Arena* arena) const {
  Loaded* n = new Loaded;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Loaded::Clear() {
// @@protoc_insertion_point(message_clear_start:Loaded)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  packageid_ = GOOGLE_LONGLONG(0);
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool Loaded::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Loaded)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int64 packageid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_packageid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &packageid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Loaded)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Loaded)
  return false;
#undef DO_
}

void Loaded::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Loaded)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int64 packageid = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->packageid(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:Loaded)
}

::google::protobuf::uint8* Loaded::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Loaded)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int64 packageid = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->packageid(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Loaded)
  return target;
}

size_t Loaded::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Loaded)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required int64 packageid = 1;
  if (has_packageid()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->packageid());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Loaded::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Loaded)
  GOOGLE_DCHECK_NE(&from, this);
  const Loaded* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Loaded>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Loaded)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Loaded)
    MergeFrom(*source);
  }
}

void Loaded::MergeFrom(const Loaded& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Loaded)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_packageid()) {
    set_packageid(from.packageid());
  }
}

void Loaded::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Loaded)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Loaded::CopyFrom(const Loaded& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Loaded)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Loaded::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  return true;
}

void Loaded::Swap(Loaded* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Loaded::InternalSwap(Loaded* other) {
  using std::swap;
  swap(packageid_, other->packageid_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Loaded::GetMetadata() const {
  protobuf_uacmt_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_uacmt_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Product::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Product::kIdFieldNumber;
const int Product::kDescriptionFieldNumber;
const int Product::kCountFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Product::Product()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_uacmt_2eproto::InitDefaultsProduct();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Product)
}
Product::Product(const Product& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  description_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_description()) {
    description_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.description_);
  }
  ::memcpy(&id_, &from.id_,
    static_cast<size_t>(reinterpret_cast<char*>(&count_) -
    reinterpret_cast<char*>(&id_)) + sizeof(count_));
  // @@protoc_insertion_point(copy_constructor:Product)
}

void Product::SharedCtor() {
  _cached_size_ = 0;
  description_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&count_) -
      reinterpret_cast<char*>(&id_)) + sizeof(count_));
}

Product::~Product() {
  // @@protoc_insertion_point(destructor:Product)
  SharedDtor();
}

void Product::SharedDtor() {
  description_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Product::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Product::descriptor() {
  ::protobuf_uacmt_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_uacmt_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Product& Product::default_instance() {
  ::protobuf_uacmt_2eproto::InitDefaultsProduct();
  return *internal_default_instance();
}

Product* Product::New(::google::protobuf::Arena* arena) const {
  Product* n = new Product;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Product::Clear() {
// @@protoc_insertion_point(message_clear_start:Product)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(!description_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
    (*description_.UnsafeRawStringPointer())->clear();
  }
  if (cached_has_bits & 6u) {
    ::memset(&id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&count_) -
        reinterpret_cast<char*>(&id_)) + sizeof(count_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool Product::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Product)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int64 id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required string description = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_description()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->description().data(), static_cast<int>(this->description().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "Product.description");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 count = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_count();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &count_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Product)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Product)
  return false;
#undef DO_
}

void Product::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Product)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int64 id = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->id(), output);
  }

  // required string description = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->description().data(), static_cast<int>(this->description().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "Product.description");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->description(), output);
  }

  // required int32 count = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->count(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:Product)
}

::google::protobuf::uint8* Product::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Product)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int64 id = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->id(), target);
  }

  // required string description = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->description().data(), static_cast<int>(this->description().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "Product.description");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->description(), target);
  }

  // required int32 count = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->count(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Product)
  return target;
}

size_t Product::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:Product)
  size_t total_size = 0;

  if (has_description()) {
    // required string description = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->description());
  }

  if (has_id()) {
    // required int64 id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->id());
  }

  if (has_count()) {
    // required int32 count = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->count());
  }

  return total_size;
}
size_t Product::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Product)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000007) ^ 0x00000007) == 0) {  // All required fields are present.
    // required string description = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->description());

    // required int64 id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->id());

    // required int32 count = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->count());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Product::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Product)
  GOOGLE_DCHECK_NE(&from, this);
  const Product* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Product>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Product)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Product)
    MergeFrom(*source);
  }
}

void Product::MergeFrom(const Product& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Product)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_description();
      description_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.description_);
    }
    if (cached_has_bits & 0x00000002u) {
      id_ = from.id_;
    }
    if (cached_has_bits & 0x00000004u) {
      count_ = from.count_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void Product::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Product)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Product::CopyFrom(const Product& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Product)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Product::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;
  return true;
}

void Product::Swap(Product* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Product::InternalSwap(Product* other) {
  using std::swap;
  description_.Swap(&other->description_);
  swap(id_, other->id_);
  swap(count_, other->count_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Product::GetMetadata() const {
  protobuf_uacmt_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_uacmt_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Warehouse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Warehouse::kWhidFieldNumber;
const int Warehouse::kWhxFieldNumber;
const int Warehouse::kWhyFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Warehouse::Warehouse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_uacmt_2eproto::InitDefaultsWarehouse();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Warehouse)
}
Warehouse::Warehouse(const Warehouse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&whid_, &from.whid_,
    static_cast<size_t>(reinterpret_cast<char*>(&why_) -
    reinterpret_cast<char*>(&whid_)) + sizeof(why_));
  // @@protoc_insertion_point(copy_constructor:Warehouse)
}

void Warehouse::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&whid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&why_) -
      reinterpret_cast<char*>(&whid_)) + sizeof(why_));
}

Warehouse::~Warehouse() {
  // @@protoc_insertion_point(destructor:Warehouse)
  SharedDtor();
}

void Warehouse::SharedDtor() {
}

void Warehouse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Warehouse::descriptor() {
  ::protobuf_uacmt_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_uacmt_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Warehouse& Warehouse::default_instance() {
  ::protobuf_uacmt_2eproto::InitDefaultsWarehouse();
  return *internal_default_instance();
}

Warehouse* Warehouse::New(::google::protobuf::Arena* arena) const {
  Warehouse* n = new Warehouse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Warehouse::Clear() {
// @@protoc_insertion_point(message_clear_start:Warehouse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 7u) {
    ::memset(&whid_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&why_) -
        reinterpret_cast<char*>(&whid_)) + sizeof(why_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool Warehouse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Warehouse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 whid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_whid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &whid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 whx = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_whx();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &whx_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 why = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_why();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &why_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Warehouse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Warehouse)
  return false;
#undef DO_
}

void Warehouse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Warehouse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 whid = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->whid(), output);
  }

  // required int32 whx = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->whx(), output);
  }

  // required int32 why = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->why(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:Warehouse)
}

::google::protobuf::uint8* Warehouse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Warehouse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 whid = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->whid(), target);
  }

  // required int32 whx = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->whx(), target);
  }

  // required int32 why = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->why(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Warehouse)
  return target;
}

size_t Warehouse::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:Warehouse)
  size_t total_size = 0;

  if (has_whid()) {
    // required int32 whid = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->whid());
  }

  if (has_whx()) {
    // required int32 whx = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->whx());
  }

  if (has_why()) {
    // required int32 why = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->why());
  }

  return total_size;
}
size_t Warehouse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Warehouse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000007) ^ 0x00000007) == 0) {  // All required fields are present.
    // required int32 whid = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->whid());

    // required int32 whx = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->whx());

    // required int32 why = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->why());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Warehouse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Warehouse)
  GOOGLE_DCHECK_NE(&from, this);
  const Warehouse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Warehouse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Warehouse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Warehouse)
    MergeFrom(*source);
  }
}

void Warehouse::MergeFrom(const Warehouse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Warehouse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      whid_ = from.whid_;
    }
    if (cached_has_bits & 0x00000002u) {
      whx_ = from.whx_;
    }
    if (cached_has_bits & 0x00000004u) {
      why_ = from.why_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void Warehouse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Warehouse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Warehouse::CopyFrom(const Warehouse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Warehouse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Warehouse::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;
  return true;
}

void Warehouse::Swap(Warehouse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Warehouse::InternalSwap(Warehouse* other) {
  using std::swap;
  swap(whid_, other->whid_);
  swap(whx_, other->whx_);
  swap(why_, other->why_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Warehouse::GetMetadata() const {
  protobuf_uacmt_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_uacmt_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Purchase::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Purchase::kWhidFieldNumber;
const int Purchase::kXFieldNumber;
const int Purchase::kYFieldNumber;
const int Purchase::kThingsFieldNumber;
const int Purchase::kOrderidFieldNumber;
const int Purchase::kUpsuseridFieldNumber;
const int Purchase::kIsprimeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Purchase::Purchase()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_uacmt_2eproto::InitDefaultsPurchase();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Purchase)
}
Purchase::Purchase(const Purchase& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      things_(from.things_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  upsuserid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_upsuserid()) {
    upsuserid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.upsuserid_);
  }
  ::memcpy(&whid_, &from.whid_,
    static_cast<size_t>(reinterpret_cast<char*>(&isprime_) -
    reinterpret_cast<char*>(&whid_)) + sizeof(isprime_));
  // @@protoc_insertion_point(copy_constructor:Purchase)
}

void Purchase::SharedCtor() {
  _cached_size_ = 0;
  upsuserid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&whid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&isprime_) -
      reinterpret_cast<char*>(&whid_)) + sizeof(isprime_));
}

Purchase::~Purchase() {
  // @@protoc_insertion_point(destructor:Purchase)
  SharedDtor();
}

void Purchase::SharedDtor() {
  upsuserid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Purchase::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Purchase::descriptor() {
  ::protobuf_uacmt_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_uacmt_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Purchase& Purchase::default_instance() {
  ::protobuf_uacmt_2eproto::InitDefaultsPurchase();
  return *internal_default_instance();
}

Purchase* Purchase::New(::google::protobuf::Arena* arena) const {
  Purchase* n = new Purchase;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Purchase::Clear() {
// @@protoc_insertion_point(message_clear_start:Purchase)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  things_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(!upsuserid_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
    (*upsuserid_.UnsafeRawStringPointer())->clear();
  }
  if (cached_has_bits & 62u) {
    ::memset(&whid_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&isprime_) -
        reinterpret_cast<char*>(&whid_)) + sizeof(isprime_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool Purchase::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Purchase)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 whid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_whid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &whid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 x = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_x();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &x_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 y = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_y();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &y_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .Product things = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_things()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int64 orderid = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          set_has_orderid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &orderid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string upsuserid = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_upsuserid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->upsuserid().data(), static_cast<int>(this->upsuserid().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "Purchase.upsuserid");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required bool isprime = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {
          set_has_isprime();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &isprime_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Purchase)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Purchase)
  return false;
#undef DO_
}

void Purchase::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Purchase)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 whid = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->whid(), output);
  }

  // required int32 x = 2;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->x(), output);
  }

  // required int32 y = 3;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->y(), output);
  }

  // repeated .Product things = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->things_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->things(static_cast<int>(i)), output);
  }

  // required int64 orderid = 5;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(5, this->orderid(), output);
  }

  // optional string upsuserid = 6;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->upsuserid().data(), static_cast<int>(this->upsuserid().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "Purchase.upsuserid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->upsuserid(), output);
  }

  // required bool isprime = 7;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(7, this->isprime(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:Purchase)
}

::google::protobuf::uint8* Purchase::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Purchase)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 whid = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->whid(), target);
  }

  // required int32 x = 2;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->x(), target);
  }

  // required int32 y = 3;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->y(), target);
  }

  // repeated .Product things = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->things_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->things(static_cast<int>(i)), deterministic, target);
  }

  // required int64 orderid = 5;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(5, this->orderid(), target);
  }

  // optional string upsuserid = 6;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->upsuserid().data(), static_cast<int>(this->upsuserid().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "Purchase.upsuserid");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->upsuserid(), target);
  }

  // required bool isprime = 7;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(7, this->isprime(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Purchase)
  return target;
}

size_t Purchase::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:Purchase)
  size_t total_size = 0;

  if (has_whid()) {
    // required int32 whid = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->whid());
  }

  if (has_x()) {
    // required int32 x = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->x());
  }

  if (has_orderid()) {
    // required int64 orderid = 5;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->orderid());
  }

  if (has_y()) {
    // required int32 y = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->y());
  }

  if (has_isprime()) {
    // required bool isprime = 7;
    total_size += 1 + 1;
  }

  return total_size;
}
size_t Purchase::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Purchase)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x0000003e) ^ 0x0000003e) == 0) {  // All required fields are present.
    // required int32 whid = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->whid());

    // required int32 x = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->x());

    // required int64 orderid = 5;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->orderid());

    // required int32 y = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->y());

    // required bool isprime = 7;
    total_size += 1 + 1;

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  // repeated .Product things = 4;
  {
    unsigned int count = static_cast<unsigned int>(this->things_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->things(static_cast<int>(i)));
    }
  }

  // optional string upsuserid = 6;
  if (has_upsuserid()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->upsuserid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Purchase::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Purchase)
  GOOGLE_DCHECK_NE(&from, this);
  const Purchase* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Purchase>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Purchase)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Purchase)
    MergeFrom(*source);
  }
}

void Purchase::MergeFrom(const Purchase& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Purchase)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  things_.MergeFrom(from.things_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 63u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_upsuserid();
      upsuserid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.upsuserid_);
    }
    if (cached_has_bits & 0x00000002u) {
      whid_ = from.whid_;
    }
    if (cached_has_bits & 0x00000004u) {
      x_ = from.x_;
    }
    if (cached_has_bits & 0x00000008u) {
      orderid_ = from.orderid_;
    }
    if (cached_has_bits & 0x00000010u) {
      y_ = from.y_;
    }
    if (cached_has_bits & 0x00000020u) {
      isprime_ = from.isprime_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void Purchase::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Purchase)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Purchase::CopyFrom(const Purchase& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Purchase)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Purchase::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000003e) != 0x0000003e) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->things())) return false;
  return true;
}

void Purchase::Swap(Purchase* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Purchase::InternalSwap(Purchase* other) {
  using std::swap;
  things_.InternalSwap(&other->things_);
  upsuserid_.Swap(&other->upsuserid_);
  swap(whid_, other->whid_);
  swap(x_, other->x_);
  swap(orderid_, other->orderid_);
  swap(y_, other->y_);
  swap(isprime_, other->isprime_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Purchase::GetMetadata() const {
  protobuf_uacmt_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_uacmt_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ChangeDes::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ChangeDes::kPkgidFieldNumber;
const int ChangeDes::kXFieldNumber;
const int ChangeDes::kYFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ChangeDes::ChangeDes()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_uacmt_2eproto::InitDefaultsChangeDes();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ChangeDes)
}
ChangeDes::ChangeDes(const ChangeDes& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&pkgid_, &from.pkgid_,
    static_cast<size_t>(reinterpret_cast<char*>(&y_) -
    reinterpret_cast<char*>(&pkgid_)) + sizeof(y_));
  // @@protoc_insertion_point(copy_constructor:ChangeDes)
}

void ChangeDes::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&pkgid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&y_) -
      reinterpret_cast<char*>(&pkgid_)) + sizeof(y_));
}

ChangeDes::~ChangeDes() {
  // @@protoc_insertion_point(destructor:ChangeDes)
  SharedDtor();
}

void ChangeDes::SharedDtor() {
}

void ChangeDes::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ChangeDes::descriptor() {
  ::protobuf_uacmt_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_uacmt_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ChangeDes& ChangeDes::default_instance() {
  ::protobuf_uacmt_2eproto::InitDefaultsChangeDes();
  return *internal_default_instance();
}

ChangeDes* ChangeDes::New(::google::protobuf::Arena* arena) const {
  ChangeDes* n = new ChangeDes;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ChangeDes::Clear() {
// @@protoc_insertion_point(message_clear_start:ChangeDes)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 7u) {
    ::memset(&pkgid_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&y_) -
        reinterpret_cast<char*>(&pkgid_)) + sizeof(y_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ChangeDes::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ChangeDes)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int64 pkgid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_pkgid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &pkgid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 x = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_x();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &x_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 y = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_y();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &y_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ChangeDes)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ChangeDes)
  return false;
#undef DO_
}

void ChangeDes::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ChangeDes)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int64 pkgid = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->pkgid(), output);
  }

  // required int32 x = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->x(), output);
  }

  // required int32 y = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->y(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ChangeDes)
}

::google::protobuf::uint8* ChangeDes::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ChangeDes)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int64 pkgid = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->pkgid(), target);
  }

  // required int32 x = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->x(), target);
  }

  // required int32 y = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->y(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ChangeDes)
  return target;
}

size_t ChangeDes::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:ChangeDes)
  size_t total_size = 0;

  if (has_pkgid()) {
    // required int64 pkgid = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->pkgid());
  }

  if (has_x()) {
    // required int32 x = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->x());
  }

  if (has_y()) {
    // required int32 y = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->y());
  }

  return total_size;
}
size_t ChangeDes::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ChangeDes)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000007) ^ 0x00000007) == 0) {  // All required fields are present.
    // required int64 pkgid = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->pkgid());

    // required int32 x = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->x());

    // required int32 y = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->y());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ChangeDes::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ChangeDes)
  GOOGLE_DCHECK_NE(&from, this);
  const ChangeDes* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ChangeDes>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ChangeDes)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ChangeDes)
    MergeFrom(*source);
  }
}

void ChangeDes::MergeFrom(const ChangeDes& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ChangeDes)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      pkgid_ = from.pkgid_;
    }
    if (cached_has_bits & 0x00000002u) {
      x_ = from.x_;
    }
    if (cached_has_bits & 0x00000004u) {
      y_ = from.y_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void ChangeDes::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ChangeDes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ChangeDes::CopyFrom(const ChangeDes& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ChangeDes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ChangeDes::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;
  return true;
}

void ChangeDes::Swap(ChangeDes* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ChangeDes::InternalSwap(ChangeDes* other) {
  using std::swap;
  swap(pkgid_, other->pkgid_);
  swap(x_, other->x_);
  swap(y_, other->y_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ChangeDes::GetMetadata() const {
  protobuf_uacmt_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_uacmt_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void AUCommands::InitAsDefaultInstance() {
  ::_AUCommands_default_instance_._instance.get_mutable()->pc_ = const_cast< ::Purchase*>(
      ::Purchase::internal_default_instance());
  ::_AUCommands_default_instance_._instance.get_mutable()->ldd_ = const_cast< ::Loaded*>(
      ::Loaded::internal_default_instance());
  ::_AUCommands_default_instance_._instance.get_mutable()->chdes_ = const_cast< ::ChangeDes*>(
      ::ChangeDes::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AUCommands::kPcFieldNumber;
const int AUCommands::kLddFieldNumber;
const int AUCommands::kChdesFieldNumber;
const int AUCommands::kFinishedFieldNumber;
const int AUCommands::kWhinfoFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AUCommands::AUCommands()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_uacmt_2eproto::InitDefaultsAUCommands();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:AUCommands)
}
AUCommands::AUCommands(const AUCommands& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      whinfo_(from.whinfo_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_pc()) {
    pc_ = new ::Purchase(*from.pc_);
  } else {
    pc_ = NULL;
  }
  if (from.has_ldd()) {
    ldd_ = new ::Loaded(*from.ldd_);
  } else {
    ldd_ = NULL;
  }
  if (from.has_chdes()) {
    chdes_ = new ::ChangeDes(*from.chdes_);
  } else {
    chdes_ = NULL;
  }
  finished_ = from.finished_;
  // @@protoc_insertion_point(copy_constructor:AUCommands)
}

void AUCommands::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&pc_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&finished_) -
      reinterpret_cast<char*>(&pc_)) + sizeof(finished_));
}

AUCommands::~AUCommands() {
  // @@protoc_insertion_point(destructor:AUCommands)
  SharedDtor();
}

void AUCommands::SharedDtor() {
  if (this != internal_default_instance()) delete pc_;
  if (this != internal_default_instance()) delete ldd_;
  if (this != internal_default_instance()) delete chdes_;
}

void AUCommands::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AUCommands::descriptor() {
  ::protobuf_uacmt_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_uacmt_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AUCommands& AUCommands::default_instance() {
  ::protobuf_uacmt_2eproto::InitDefaultsAUCommands();
  return *internal_default_instance();
}

AUCommands* AUCommands::New(::google::protobuf::Arena* arena) const {
  AUCommands* n = new AUCommands;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void AUCommands::Clear() {
// @@protoc_insertion_point(message_clear_start:AUCommands)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  whinfo_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(pc_ != NULL);
      pc_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(ldd_ != NULL);
      ldd_->Clear();
    }
    if (cached_has_bits & 0x00000004u) {
      GOOGLE_DCHECK(chdes_ != NULL);
      chdes_->Clear();
    }
  }
  finished_ = false;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool AUCommands::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:AUCommands)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .Purchase pc = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_pc()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .Loaded ldd = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_ldd()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .ChangeDes chdes = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_chdes()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool finished = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_finished();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &finished_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .Warehouse whinfo = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_whinfo()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:AUCommands)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:AUCommands)
  return false;
#undef DO_
}

void AUCommands::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:AUCommands)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .Purchase pc = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->pc_, output);
  }

  // optional .Loaded ldd = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->ldd_, output);
  }

  // optional .ChangeDes chdes = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->chdes_, output);
  }

  // optional bool finished = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(4, this->finished(), output);
  }

  // repeated .Warehouse whinfo = 5;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->whinfo_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->whinfo(static_cast<int>(i)), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:AUCommands)
}

::google::protobuf::uint8* AUCommands::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:AUCommands)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .Purchase pc = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *this->pc_, deterministic, target);
  }

  // optional .Loaded ldd = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, *this->ldd_, deterministic, target);
  }

  // optional .ChangeDes chdes = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, *this->chdes_, deterministic, target);
  }

  // optional bool finished = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(4, this->finished(), target);
  }

  // repeated .Warehouse whinfo = 5;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->whinfo_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, this->whinfo(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:AUCommands)
  return target;
}

size_t AUCommands::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:AUCommands)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .Warehouse whinfo = 5;
  {
    unsigned int count = static_cast<unsigned int>(this->whinfo_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->whinfo(static_cast<int>(i)));
    }
  }

  if (_has_bits_[0 / 32] & 15u) {
    // optional .Purchase pc = 1;
    if (has_pc()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *this->pc_);
    }

    // optional .Loaded ldd = 2;
    if (has_ldd()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *this->ldd_);
    }

    // optional .ChangeDes chdes = 3;
    if (has_chdes()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *this->chdes_);
    }

    // optional bool finished = 4;
    if (has_finished()) {
      total_size += 1 + 1;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AUCommands::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:AUCommands)
  GOOGLE_DCHECK_NE(&from, this);
  const AUCommands* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AUCommands>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:AUCommands)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:AUCommands)
    MergeFrom(*source);
  }
}

void AUCommands::MergeFrom(const AUCommands& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:AUCommands)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  whinfo_.MergeFrom(from.whinfo_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_pc()->::Purchase::MergeFrom(from.pc());
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_ldd()->::Loaded::MergeFrom(from.ldd());
    }
    if (cached_has_bits & 0x00000004u) {
      mutable_chdes()->::ChangeDes::MergeFrom(from.chdes());
    }
    if (cached_has_bits & 0x00000008u) {
      finished_ = from.finished_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void AUCommands::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:AUCommands)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AUCommands::CopyFrom(const AUCommands& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:AUCommands)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AUCommands::IsInitialized() const {
  if (!::google::protobuf::internal::AllAreInitialized(this->whinfo())) return false;
  if (has_pc()) {
    if (!this->pc_->IsInitialized()) return false;
  }
  if (has_ldd()) {
    if (!this->ldd_->IsInitialized()) return false;
  }
  if (has_chdes()) {
    if (!this->chdes_->IsInitialized()) return false;
  }
  return true;
}

void AUCommands::Swap(AUCommands* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AUCommands::InternalSwap(AUCommands* other) {
  using std::swap;
  whinfo_.InternalSwap(&other->whinfo_);
  swap(pc_, other->pc_);
  swap(ldd_, other->ldd_);
  swap(chdes_, other->chdes_);
  swap(finished_, other->finished_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata AUCommands::GetMetadata() const {
  protobuf_uacmt_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_uacmt_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void PackageStatus::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PackageStatus::kPkgidFieldNumber;
const int PackageStatus::kStatusFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PackageStatus::PackageStatus()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_uacmt_2eproto::InitDefaultsPackageStatus();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:PackageStatus)
}
PackageStatus::PackageStatus(const PackageStatus& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  status_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_status()) {
    status_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.status_);
  }
  pkgid_ = from.pkgid_;
  // @@protoc_insertion_point(copy_constructor:PackageStatus)
}

void PackageStatus::SharedCtor() {
  _cached_size_ = 0;
  status_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  pkgid_ = GOOGLE_LONGLONG(0);
}

PackageStatus::~PackageStatus() {
  // @@protoc_insertion_point(destructor:PackageStatus)
  SharedDtor();
}

void PackageStatus::SharedDtor() {
  status_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void PackageStatus::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PackageStatus::descriptor() {
  ::protobuf_uacmt_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_uacmt_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PackageStatus& PackageStatus::default_instance() {
  ::protobuf_uacmt_2eproto::InitDefaultsPackageStatus();
  return *internal_default_instance();
}

PackageStatus* PackageStatus::New(::google::protobuf::Arena* arena) const {
  PackageStatus* n = new PackageStatus;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PackageStatus::Clear() {
// @@protoc_insertion_point(message_clear_start:PackageStatus)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(!status_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
    (*status_.UnsafeRawStringPointer())->clear();
  }
  pkgid_ = GOOGLE_LONGLONG(0);
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool PackageStatus::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:PackageStatus)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int64 pkgid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_pkgid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &pkgid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required string status = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_status()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->status().data(), static_cast<int>(this->status().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "PackageStatus.status");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:PackageStatus)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:PackageStatus)
  return false;
#undef DO_
}

void PackageStatus::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:PackageStatus)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int64 pkgid = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->pkgid(), output);
  }

  // required string status = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->status().data(), static_cast<int>(this->status().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "PackageStatus.status");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->status(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:PackageStatus)
}

::google::protobuf::uint8* PackageStatus::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:PackageStatus)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int64 pkgid = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->pkgid(), target);
  }

  // required string status = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->status().data(), static_cast<int>(this->status().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "PackageStatus.status");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->status(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:PackageStatus)
  return target;
}

size_t PackageStatus::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:PackageStatus)
  size_t total_size = 0;

  if (has_status()) {
    // required string status = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->status());
  }

  if (has_pkgid()) {
    // required int64 pkgid = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->pkgid());
  }

  return total_size;
}
size_t PackageStatus::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:PackageStatus)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required string status = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->status());

    // required int64 pkgid = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->pkgid());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PackageStatus::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:PackageStatus)
  GOOGLE_DCHECK_NE(&from, this);
  const PackageStatus* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PackageStatus>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:PackageStatus)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:PackageStatus)
    MergeFrom(*source);
  }
}

void PackageStatus::MergeFrom(const PackageStatus& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:PackageStatus)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_status();
      status_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.status_);
    }
    if (cached_has_bits & 0x00000002u) {
      pkgid_ = from.pkgid_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void PackageStatus::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:PackageStatus)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PackageStatus::CopyFrom(const PackageStatus& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PackageStatus)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PackageStatus::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  return true;
}

void PackageStatus::Swap(PackageStatus* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PackageStatus::InternalSwap(PackageStatus* other) {
  using std::swap;
  status_.Swap(&other->status_);
  swap(pkgid_, other->pkgid_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PackageStatus::GetMetadata() const {
  protobuf_uacmt_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_uacmt_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void DesChangeResult::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DesChangeResult::kPkgidFieldNumber;
const int DesChangeResult::kResFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DesChangeResult::DesChangeResult()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_uacmt_2eproto::InitDefaultsDesChangeResult();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:DesChangeResult)
}
DesChangeResult::DesChangeResult(const DesChangeResult& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&pkgid_, &from.pkgid_,
    static_cast<size_t>(reinterpret_cast<char*>(&res_) -
    reinterpret_cast<char*>(&pkgid_)) + sizeof(res_));
  // @@protoc_insertion_point(copy_constructor:DesChangeResult)
}

void DesChangeResult::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&pkgid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&res_) -
      reinterpret_cast<char*>(&pkgid_)) + sizeof(res_));
}

DesChangeResult::~DesChangeResult() {
  // @@protoc_insertion_point(destructor:DesChangeResult)
  SharedDtor();
}

void DesChangeResult::SharedDtor() {
}

void DesChangeResult::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DesChangeResult::descriptor() {
  ::protobuf_uacmt_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_uacmt_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DesChangeResult& DesChangeResult::default_instance() {
  ::protobuf_uacmt_2eproto::InitDefaultsDesChangeResult();
  return *internal_default_instance();
}

DesChangeResult* DesChangeResult::New(::google::protobuf::Arena* arena) const {
  DesChangeResult* n = new DesChangeResult;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void DesChangeResult::Clear() {
// @@protoc_insertion_point(message_clear_start:DesChangeResult)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    ::memset(&pkgid_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&res_) -
        reinterpret_cast<char*>(&pkgid_)) + sizeof(res_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool DesChangeResult::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:DesChangeResult)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int64 pkgid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_pkgid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &pkgid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required bool res = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_res();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &res_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:DesChangeResult)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:DesChangeResult)
  return false;
#undef DO_
}

void DesChangeResult::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:DesChangeResult)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int64 pkgid = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->pkgid(), output);
  }

  // required bool res = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->res(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:DesChangeResult)
}

::google::protobuf::uint8* DesChangeResult::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:DesChangeResult)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int64 pkgid = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->pkgid(), target);
  }

  // required bool res = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->res(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:DesChangeResult)
  return target;
}

size_t DesChangeResult::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:DesChangeResult)
  size_t total_size = 0;

  if (has_pkgid()) {
    // required int64 pkgid = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->pkgid());
  }

  if (has_res()) {
    // required bool res = 2;
    total_size += 1 + 1;
  }

  return total_size;
}
size_t DesChangeResult::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:DesChangeResult)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required int64 pkgid = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->pkgid());

    // required bool res = 2;
    total_size += 1 + 1;

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DesChangeResult::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:DesChangeResult)
  GOOGLE_DCHECK_NE(&from, this);
  const DesChangeResult* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DesChangeResult>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:DesChangeResult)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:DesChangeResult)
    MergeFrom(*source);
  }
}

void DesChangeResult::MergeFrom(const DesChangeResult& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:DesChangeResult)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      pkgid_ = from.pkgid_;
    }
    if (cached_has_bits & 0x00000002u) {
      res_ = from.res_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void DesChangeResult::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:DesChangeResult)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DesChangeResult::CopyFrom(const DesChangeResult& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:DesChangeResult)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DesChangeResult::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  return true;
}

void DesChangeResult::Swap(DesChangeResult* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DesChangeResult::InternalSwap(DesChangeResult* other) {
  using std::swap;
  swap(pkgid_, other->pkgid_);
  swap(res_, other->res_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata DesChangeResult::GetMetadata() const {
  protobuf_uacmt_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_uacmt_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void StartLoad::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int StartLoad::kWhidFieldNumber;
const int StartLoad::kTruckidFieldNumber;
const int StartLoad::kPackageidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

StartLoad::StartLoad()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_uacmt_2eproto::InitDefaultsStartLoad();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:StartLoad)
}
StartLoad::StartLoad(const StartLoad& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      packageid_(from.packageid_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&whid_, &from.whid_,
    static_cast<size_t>(reinterpret_cast<char*>(&truckid_) -
    reinterpret_cast<char*>(&whid_)) + sizeof(truckid_));
  // @@protoc_insertion_point(copy_constructor:StartLoad)
}

void StartLoad::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&whid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&truckid_) -
      reinterpret_cast<char*>(&whid_)) + sizeof(truckid_));
}

StartLoad::~StartLoad() {
  // @@protoc_insertion_point(destructor:StartLoad)
  SharedDtor();
}

void StartLoad::SharedDtor() {
}

void StartLoad::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* StartLoad::descriptor() {
  ::protobuf_uacmt_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_uacmt_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const StartLoad& StartLoad::default_instance() {
  ::protobuf_uacmt_2eproto::InitDefaultsStartLoad();
  return *internal_default_instance();
}

StartLoad* StartLoad::New(::google::protobuf::Arena* arena) const {
  StartLoad* n = new StartLoad;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void StartLoad::Clear() {
// @@protoc_insertion_point(message_clear_start:StartLoad)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  packageid_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    ::memset(&whid_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&truckid_) -
        reinterpret_cast<char*>(&whid_)) + sizeof(truckid_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool StartLoad::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:StartLoad)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 whid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_whid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &whid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 truckid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_truckid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &truckid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int64 packageid = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 1, 24u, input, this->mutable_packageid())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, this->mutable_packageid())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:StartLoad)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:StartLoad)
  return false;
#undef DO_
}

void StartLoad::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:StartLoad)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 whid = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->whid(), output);
  }

  // required int32 truckid = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->truckid(), output);
  }

  // repeated int64 packageid = 3;
  for (int i = 0, n = this->packageid_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(
      3, this->packageid(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:StartLoad)
}

::google::protobuf::uint8* StartLoad::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:StartLoad)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 whid = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->whid(), target);
  }

  // required int32 truckid = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->truckid(), target);
  }

  // repeated int64 packageid = 3;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteInt64ToArray(3, this->packageid_, target);

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:StartLoad)
  return target;
}

size_t StartLoad::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:StartLoad)
  size_t total_size = 0;

  if (has_whid()) {
    // required int32 whid = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->whid());
  }

  if (has_truckid()) {
    // required int32 truckid = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->truckid());
  }

  return total_size;
}
size_t StartLoad::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:StartLoad)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required int32 whid = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->whid());

    // required int32 truckid = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->truckid());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  // repeated int64 packageid = 3;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int64Size(this->packageid_);
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->packageid_size());
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void StartLoad::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:StartLoad)
  GOOGLE_DCHECK_NE(&from, this);
  const StartLoad* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const StartLoad>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:StartLoad)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:StartLoad)
    MergeFrom(*source);
  }
}

void StartLoad::MergeFrom(const StartLoad& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:StartLoad)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  packageid_.MergeFrom(from.packageid_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      whid_ = from.whid_;
    }
    if (cached_has_bits & 0x00000002u) {
      truckid_ = from.truckid_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void StartLoad::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:StartLoad)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void StartLoad::CopyFrom(const StartLoad& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:StartLoad)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StartLoad::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  return true;
}

void StartLoad::Swap(StartLoad* other) {
  if (other == this) return;
  InternalSwap(other);
}
void StartLoad::InternalSwap(StartLoad* other) {
  using std::swap;
  packageid_.InternalSwap(&other->packageid_);
  swap(whid_, other->whid_);
  swap(truckid_, other->truckid_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata StartLoad::GetMetadata() const {
  protobuf_uacmt_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_uacmt_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void PackageID::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PackageID::kPkgidFieldNumber;
const int PackageID::kOrderidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PackageID::PackageID()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_uacmt_2eproto::InitDefaultsPackageID();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:PackageID)
}
PackageID::PackageID(const PackageID& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&pkgid_, &from.pkgid_,
    static_cast<size_t>(reinterpret_cast<char*>(&orderid_) -
    reinterpret_cast<char*>(&pkgid_)) + sizeof(orderid_));
  // @@protoc_insertion_point(copy_constructor:PackageID)
}

void PackageID::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&pkgid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&orderid_) -
      reinterpret_cast<char*>(&pkgid_)) + sizeof(orderid_));
}

PackageID::~PackageID() {
  // @@protoc_insertion_point(destructor:PackageID)
  SharedDtor();
}

void PackageID::SharedDtor() {
}

void PackageID::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PackageID::descriptor() {
  ::protobuf_uacmt_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_uacmt_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PackageID& PackageID::default_instance() {
  ::protobuf_uacmt_2eproto::InitDefaultsPackageID();
  return *internal_default_instance();
}

PackageID* PackageID::New(::google::protobuf::Arena* arena) const {
  PackageID* n = new PackageID;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PackageID::Clear() {
// @@protoc_insertion_point(message_clear_start:PackageID)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    ::memset(&pkgid_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&orderid_) -
        reinterpret_cast<char*>(&pkgid_)) + sizeof(orderid_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool PackageID::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:PackageID)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int64 pkgid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_pkgid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &pkgid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int64 orderid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_orderid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &orderid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:PackageID)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:PackageID)
  return false;
#undef DO_
}

void PackageID::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:PackageID)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int64 pkgid = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->pkgid(), output);
  }

  // required int64 orderid = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->orderid(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:PackageID)
}

::google::protobuf::uint8* PackageID::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:PackageID)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int64 pkgid = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->pkgid(), target);
  }

  // required int64 orderid = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->orderid(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:PackageID)
  return target;
}

size_t PackageID::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:PackageID)
  size_t total_size = 0;

  if (has_pkgid()) {
    // required int64 pkgid = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->pkgid());
  }

  if (has_orderid()) {
    // required int64 orderid = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->orderid());
  }

  return total_size;
}
size_t PackageID::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:PackageID)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required int64 pkgid = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->pkgid());

    // required int64 orderid = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->orderid());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PackageID::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:PackageID)
  GOOGLE_DCHECK_NE(&from, this);
  const PackageID* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PackageID>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:PackageID)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:PackageID)
    MergeFrom(*source);
  }
}

void PackageID::MergeFrom(const PackageID& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:PackageID)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      pkgid_ = from.pkgid_;
    }
    if (cached_has_bits & 0x00000002u) {
      orderid_ = from.orderid_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void PackageID::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:PackageID)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PackageID::CopyFrom(const PackageID& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PackageID)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PackageID::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  return true;
}

void PackageID::Swap(PackageID* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PackageID::InternalSwap(PackageID* other) {
  using std::swap;
  swap(pkgid_, other->pkgid_);
  swap(orderid_, other->orderid_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PackageID::GetMetadata() const {
  protobuf_uacmt_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_uacmt_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void UACommands::InitAsDefaultInstance() {
  ::_UACommands_default_instance_._instance.get_mutable()->pid_ = const_cast< ::PackageID*>(
      ::PackageID::internal_default_instance());
  ::_UACommands_default_instance_._instance.get_mutable()->dcr_ = const_cast< ::DesChangeResult*>(
      ::DesChangeResult::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UACommands::kSlFieldNumber;
const int UACommands::kPidFieldNumber;
const int UACommands::kPksFieldNumber;
const int UACommands::kDcrFieldNumber;
const int UACommands::kWorldidFieldNumber;
const int UACommands::kDisconnectFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UACommands::UACommands()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_uacmt_2eproto::InitDefaultsUACommands();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:UACommands)
}
UACommands::UACommands(const UACommands& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      sl_(from.sl_),
      pks_(from.pks_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_pid()) {
    pid_ = new ::PackageID(*from.pid_);
  } else {
    pid_ = NULL;
  }
  if (from.has_dcr()) {
    dcr_ = new ::DesChangeResult(*from.dcr_);
  } else {
    dcr_ = NULL;
  }
  ::memcpy(&worldid_, &from.worldid_,
    static_cast<size_t>(reinterpret_cast<char*>(&disconnect_) -
    reinterpret_cast<char*>(&worldid_)) + sizeof(disconnect_));
  // @@protoc_insertion_point(copy_constructor:UACommands)
}

void UACommands::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&pid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&disconnect_) -
      reinterpret_cast<char*>(&pid_)) + sizeof(disconnect_));
}

UACommands::~UACommands() {
  // @@protoc_insertion_point(destructor:UACommands)
  SharedDtor();
}

void UACommands::SharedDtor() {
  if (this != internal_default_instance()) delete pid_;
  if (this != internal_default_instance()) delete dcr_;
}

void UACommands::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UACommands::descriptor() {
  ::protobuf_uacmt_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_uacmt_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const UACommands& UACommands::default_instance() {
  ::protobuf_uacmt_2eproto::InitDefaultsUACommands();
  return *internal_default_instance();
}

UACommands* UACommands::New(::google::protobuf::Arena* arena) const {
  UACommands* n = new UACommands;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void UACommands::Clear() {
// @@protoc_insertion_point(message_clear_start:UACommands)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  sl_.Clear();
  pks_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(pid_ != NULL);
      pid_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(dcr_ != NULL);
      dcr_->Clear();
    }
  }
  if (cached_has_bits & 12u) {
    ::memset(&worldid_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&disconnect_) -
        reinterpret_cast<char*>(&worldid_)) + sizeof(disconnect_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool UACommands::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:UACommands)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .StartLoad sl = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_sl()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .PackageID pid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_pid()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .PackageStatus pks = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_pks()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .DesChangeResult dcr = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_dcr()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int64 worldid = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          set_has_worldid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &worldid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool disconnect = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {
          set_has_disconnect();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &disconnect_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:UACommands)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:UACommands)
  return false;
#undef DO_
}

void UACommands::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:UACommands)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .StartLoad sl = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->sl_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->sl(static_cast<int>(i)), output);
  }

  cached_has_bits = _has_bits_[0];
  // optional .PackageID pid = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->pid_, output);
  }

  // repeated .PackageStatus pks = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->pks_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->pks(static_cast<int>(i)), output);
  }

  // optional .DesChangeResult dcr = 4;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, *this->dcr_, output);
  }

  // optional int64 worldid = 5;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(5, this->worldid(), output);
  }

  // optional bool disconnect = 6;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(6, this->disconnect(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:UACommands)
}

::google::protobuf::uint8* UACommands::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:UACommands)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .StartLoad sl = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->sl_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->sl(static_cast<int>(i)), deterministic, target);
  }

  cached_has_bits = _has_bits_[0];
  // optional .PackageID pid = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, *this->pid_, deterministic, target);
  }

  // repeated .PackageStatus pks = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->pks_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->pks(static_cast<int>(i)), deterministic, target);
  }

  // optional .DesChangeResult dcr = 4;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, *this->dcr_, deterministic, target);
  }

  // optional int64 worldid = 5;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(5, this->worldid(), target);
  }

  // optional bool disconnect = 6;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(6, this->disconnect(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:UACommands)
  return target;
}

size_t UACommands::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:UACommands)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .StartLoad sl = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->sl_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->sl(static_cast<int>(i)));
    }
  }

  // repeated .PackageStatus pks = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->pks_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->pks(static_cast<int>(i)));
    }
  }

  if (_has_bits_[0 / 32] & 15u) {
    // optional .PackageID pid = 2;
    if (has_pid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *this->pid_);
    }

    // optional .DesChangeResult dcr = 4;
    if (has_dcr()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *this->dcr_);
    }

    // optional int64 worldid = 5;
    if (has_worldid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->worldid());
    }

    // optional bool disconnect = 6;
    if (has_disconnect()) {
      total_size += 1 + 1;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void UACommands::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:UACommands)
  GOOGLE_DCHECK_NE(&from, this);
  const UACommands* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UACommands>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:UACommands)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:UACommands)
    MergeFrom(*source);
  }
}

void UACommands::MergeFrom(const UACommands& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:UACommands)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  sl_.MergeFrom(from.sl_);
  pks_.MergeFrom(from.pks_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_pid()->::PackageID::MergeFrom(from.pid());
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_dcr()->::DesChangeResult::MergeFrom(from.dcr());
    }
    if (cached_has_bits & 0x00000004u) {
      worldid_ = from.worldid_;
    }
    if (cached_has_bits & 0x00000008u) {
      disconnect_ = from.disconnect_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void UACommands::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:UACommands)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UACommands::CopyFrom(const UACommands& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:UACommands)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UACommands::IsInitialized() const {
  if (!::google::protobuf::internal::AllAreInitialized(this->sl())) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->pks())) return false;
  if (has_pid()) {
    if (!this->pid_->IsInitialized()) return false;
  }
  if (has_dcr()) {
    if (!this->dcr_->IsInitialized()) return false;
  }
  return true;
}

void UACommands::Swap(UACommands* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UACommands::InternalSwap(UACommands* other) {
  using std::swap;
  sl_.InternalSwap(&other->sl_);
  pks_.InternalSwap(&other->pks_);
  swap(pid_, other->pid_);
  swap(dcr_, other->dcr_);
  swap(worldid_, other->worldid_);
  swap(disconnect_, other->disconnect_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata UACommands::GetMetadata() const {
  protobuf_uacmt_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_uacmt_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)
